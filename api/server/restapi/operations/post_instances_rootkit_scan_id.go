// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// PostInstancesRootkitScanIDHandlerFunc turns a function with the right signature into a post instances rootkit scan ID handler
type PostInstancesRootkitScanIDHandlerFunc func(PostInstancesRootkitScanIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PostInstancesRootkitScanIDHandlerFunc) Handle(params PostInstancesRootkitScanIDParams) middleware.Responder {
	return fn(params)
}

// PostInstancesRootkitScanIDHandler interface for that can handle valid post instances rootkit scan ID params
type PostInstancesRootkitScanIDHandler interface {
	Handle(PostInstancesRootkitScanIDParams) middleware.Responder
}

// NewPostInstancesRootkitScanID creates a new http.Handler for the post instances rootkit scan ID operation
func NewPostInstancesRootkitScanID(ctx *middleware.Context, handler PostInstancesRootkitScanIDHandler) *PostInstancesRootkitScanID {
	return &PostInstancesRootkitScanID{Context: ctx, Handler: handler}
}

/*
	PostInstancesRootkitScanID swagger:route POST /instances/rootkitScan/{id} postInstancesRootkitScanId

Report a rootkit scan for a specific instance
*/
type PostInstancesRootkitScanID struct {
	Context *middleware.Context
	Handler PostInstancesRootkitScanIDHandler
}

func (o *PostInstancesRootkitScanID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewPostInstancesRootkitScanIDParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
