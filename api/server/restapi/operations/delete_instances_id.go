// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// DeleteInstancesIDHandlerFunc turns a function with the right signature into a delete instances ID handler
type DeleteInstancesIDHandlerFunc func(DeleteInstancesIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteInstancesIDHandlerFunc) Handle(params DeleteInstancesIDParams) middleware.Responder {
	return fn(params)
}

// DeleteInstancesIDHandler interface for that can handle valid delete instances ID params
type DeleteInstancesIDHandler interface {
	Handle(DeleteInstancesIDParams) middleware.Responder
}

// NewDeleteInstancesID creates a new http.Handler for the delete instances ID operation
func NewDeleteInstancesID(ctx *middleware.Context, handler DeleteInstancesIDHandler) *DeleteInstancesID {
	return &DeleteInstancesID{Context: ctx, Handler: handler}
}

/*
	DeleteInstancesID swagger:route DELETE /instances/{id} deleteInstancesId

Delete Instance.
*/
type DeleteInstancesID struct {
	Context *middleware.Context
	Handler DeleteInstancesIDHandler
}

func (o *DeleteInstancesID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewDeleteInstancesIDParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
