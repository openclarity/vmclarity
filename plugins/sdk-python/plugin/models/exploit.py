from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from plugin.models.base_model import Model
from plugin import util


class Exploit(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name=None, title=None, description=None, cve_id=None, source_db=None, urls=None):  # noqa: E501
        """Exploit - a model defined in OpenAPI

        :param name: The name of this Exploit.  # noqa: E501
        :type name: str
        :param title: The title of this Exploit.  # noqa: E501
        :type title: str
        :param description: The description of this Exploit.  # noqa: E501
        :type description: str
        :param cve_id: The cve_id of this Exploit.  # noqa: E501
        :type cve_id: str
        :param source_db: The source_db of this Exploit.  # noqa: E501
        :type source_db: str
        :param urls: The urls of this Exploit.  # noqa: E501
        :type urls: List[str]
        """
        self.openapi_types = {
            'name': str,
            'title': str,
            'description': str,
            'cve_id': str,
            'source_db': str,
            'urls': List[str]
        }

        self.attribute_map = {
            'name': 'name',
            'title': 'title',
            'description': 'description',
            'cve_id': 'cveID',
            'source_db': 'sourceDB',
            'urls': 'urls'
        }

        self._name = name
        self._title = title
        self._description = description
        self._cve_id = cve_id
        self._source_db = source_db
        self._urls = urls

    @classmethod
    def from_dict(cls, dikt) -> 'Exploit':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Exploit of this Exploit.  # noqa: E501
        :rtype: Exploit
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this Exploit.


        :return: The name of this Exploit.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this Exploit.


        :param name: The name of this Exploit.
        :type name: str
        """

        self._name = name

    @property
    def title(self) -> str:
        """Gets the title of this Exploit.


        :return: The title of this Exploit.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title: str):
        """Sets the title of this Exploit.


        :param title: The title of this Exploit.
        :type title: str
        """

        self._title = title

    @property
    def description(self) -> str:
        """Gets the description of this Exploit.


        :return: The description of this Exploit.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this Exploit.


        :param description: The description of this Exploit.
        :type description: str
        """

        self._description = description

    @property
    def cve_id(self) -> str:
        """Gets the cve_id of this Exploit.


        :return: The cve_id of this Exploit.
        :rtype: str
        """
        return self._cve_id

    @cve_id.setter
    def cve_id(self, cve_id: str):
        """Sets the cve_id of this Exploit.


        :param cve_id: The cve_id of this Exploit.
        :type cve_id: str
        """

        self._cve_id = cve_id

    @property
    def source_db(self) -> str:
        """Gets the source_db of this Exploit.


        :return: The source_db of this Exploit.
        :rtype: str
        """
        return self._source_db

    @source_db.setter
    def source_db(self, source_db: str):
        """Sets the source_db of this Exploit.


        :param source_db: The source_db of this Exploit.
        :type source_db: str
        """

        self._source_db = source_db

    @property
    def urls(self) -> List[str]:
        """Gets the urls of this Exploit.


        :return: The urls of this Exploit.
        :rtype: List[str]
        """
        return self._urls

    @urls.setter
    def urls(self, urls: List[str]):
        """Sets the urls of this Exploit.


        :param urls: The urls of this Exploit.
        :type urls: List[str]
        """

        self._urls = urls
