from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from plugin.models.base_model import Model
from plugin import util


class Malware(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, malware_name=None, malware_type=None, rule_name=None, path=None):  # noqa: E501
        """Malware - a model defined in OpenAPI

        :param malware_name: The malware_name of this Malware.  # noqa: E501
        :type malware_name: str
        :param malware_type: The malware_type of this Malware.  # noqa: E501
        :type malware_type: str
        :param rule_name: The rule_name of this Malware.  # noqa: E501
        :type rule_name: str
        :param path: The path of this Malware.  # noqa: E501
        :type path: str
        """
        self.openapi_types = {
            'malware_name': str,
            'malware_type': str,
            'rule_name': str,
            'path': str
        }

        self.attribute_map = {
            'malware_name': 'malwareName',
            'malware_type': 'malwareType',
            'rule_name': 'ruleName',
            'path': 'path'
        }

        self._malware_name = malware_name
        self._malware_type = malware_type
        self._rule_name = rule_name
        self._path = path

    @classmethod
    def from_dict(cls, dikt) -> 'Malware':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Malware of this Malware.  # noqa: E501
        :rtype: Malware
        """
        return util.deserialize_model(dikt, cls)

    @property
    def malware_name(self) -> str:
        """Gets the malware_name of this Malware.


        :return: The malware_name of this Malware.
        :rtype: str
        """
        return self._malware_name

    @malware_name.setter
    def malware_name(self, malware_name: str):
        """Sets the malware_name of this Malware.


        :param malware_name: The malware_name of this Malware.
        :type malware_name: str
        """

        self._malware_name = malware_name

    @property
    def malware_type(self) -> str:
        """Gets the malware_type of this Malware.


        :return: The malware_type of this Malware.
        :rtype: str
        """
        return self._malware_type

    @malware_type.setter
    def malware_type(self, malware_type: str):
        """Sets the malware_type of this Malware.


        :param malware_type: The malware_type of this Malware.
        :type malware_type: str
        """

        self._malware_type = malware_type

    @property
    def rule_name(self) -> str:
        """Gets the rule_name of this Malware.


        :return: The rule_name of this Malware.
        :rtype: str
        """
        return self._rule_name

    @rule_name.setter
    def rule_name(self, rule_name: str):
        """Sets the rule_name of this Malware.


        :param rule_name: The rule_name of this Malware.
        :type rule_name: str
        """

        self._rule_name = rule_name

    @property
    def path(self) -> str:
        """Gets the path of this Malware.

        Path of the file that contains malware  # noqa: E501

        :return: The path of this Malware.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path: str):
        """Sets the path of this Malware.

        Path of the file that contains malware  # noqa: E501

        :param path: The path of this Malware.
        :type path: str
        """

        self._path = path
