from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from plugin.models.base_model import Model
from plugin import util


class Package(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name=None, version=None, type=None, language=None, licenses=None, cpes=None, purl=None):  # noqa: E501
        """Package - a model defined in OpenAPI

        :param name: The name of this Package.  # noqa: E501
        :type name: str
        :param version: The version of this Package.  # noqa: E501
        :type version: str
        :param type: The type of this Package.  # noqa: E501
        :type type: str
        :param language: The language of this Package.  # noqa: E501
        :type language: str
        :param licenses: The licenses of this Package.  # noqa: E501
        :type licenses: List[str]
        :param cpes: The cpes of this Package.  # noqa: E501
        :type cpes: List[str]
        :param purl: The purl of this Package.  # noqa: E501
        :type purl: str
        """
        self.openapi_types = {
            'name': str,
            'version': str,
            'type': str,
            'language': str,
            'licenses': List[str],
            'cpes': List[str],
            'purl': str
        }

        self.attribute_map = {
            'name': 'name',
            'version': 'version',
            'type': 'type',
            'language': 'language',
            'licenses': 'licenses',
            'cpes': 'cpes',
            'purl': 'purl'
        }

        self._name = name
        self._version = version
        self._type = type
        self._language = language
        self._licenses = licenses
        self._cpes = cpes
        self._purl = purl

    @classmethod
    def from_dict(cls, dikt) -> 'Package':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Package of this Package.  # noqa: E501
        :rtype: Package
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this Package.


        :return: The name of this Package.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this Package.


        :param name: The name of this Package.
        :type name: str
        """

        self._name = name

    @property
    def version(self) -> str:
        """Gets the version of this Package.


        :return: The version of this Package.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version: str):
        """Sets the version of this Package.


        :param version: The version of this Package.
        :type version: str
        """

        self._version = version

    @property
    def type(self) -> str:
        """Gets the type of this Package.


        :return: The type of this Package.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type: str):
        """Sets the type of this Package.


        :param type: The type of this Package.
        :type type: str
        """

        self._type = type

    @property
    def language(self) -> str:
        """Gets the language of this Package.


        :return: The language of this Package.
        :rtype: str
        """
        return self._language

    @language.setter
    def language(self, language: str):
        """Sets the language of this Package.


        :param language: The language of this Package.
        :type language: str
        """

        self._language = language

    @property
    def licenses(self) -> List[str]:
        """Gets the licenses of this Package.


        :return: The licenses of this Package.
        :rtype: List[str]
        """
        return self._licenses

    @licenses.setter
    def licenses(self, licenses: List[str]):
        """Sets the licenses of this Package.


        :param licenses: The licenses of this Package.
        :type licenses: List[str]
        """

        self._licenses = licenses

    @property
    def cpes(self) -> List[str]:
        """Gets the cpes of this Package.


        :return: The cpes of this Package.
        :rtype: List[str]
        """
        return self._cpes

    @cpes.setter
    def cpes(self, cpes: List[str]):
        """Sets the cpes of this Package.


        :param cpes: The cpes of this Package.
        :type cpes: List[str]
        """

        self._cpes = cpes

    @property
    def purl(self) -> str:
        """Gets the purl of this Package.


        :return: The purl of this Package.
        :rtype: str
        """
        return self._purl

    @purl.setter
    def purl(self, purl: str):
        """Sets the purl of this Package.


        :param purl: The purl of this Package.
        :type purl: str
        """

        self._purl = purl
