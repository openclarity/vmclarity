from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from plugin.models.base_model import Model
from plugin.models.rootkit_type import RootkitType
from plugin import util

from plugin.models.rootkit_type import RootkitType  # noqa: E501

class Rootkit(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, rootkit_name=None, rootkit_type=None, message=None):  # noqa: E501
        """Rootkit - a model defined in OpenAPI

        :param rootkit_name: The rootkit_name of this Rootkit.  # noqa: E501
        :type rootkit_name: str
        :param rootkit_type: The rootkit_type of this Rootkit.  # noqa: E501
        :type rootkit_type: RootkitType
        :param message: The message of this Rootkit.  # noqa: E501
        :type message: str
        """
        self.openapi_types = {
            'rootkit_name': str,
            'rootkit_type': RootkitType,
            'message': str
        }

        self.attribute_map = {
            'rootkit_name': 'rootkitName',
            'rootkit_type': 'rootkitType',
            'message': 'message'
        }

        self._rootkit_name = rootkit_name
        self._rootkit_type = rootkit_type
        self._message = message

    @classmethod
    def from_dict(cls, dikt) -> 'Rootkit':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Rootkit of this Rootkit.  # noqa: E501
        :rtype: Rootkit
        """
        return util.deserialize_model(dikt, cls)

    @property
    def rootkit_name(self) -> str:
        """Gets the rootkit_name of this Rootkit.


        :return: The rootkit_name of this Rootkit.
        :rtype: str
        """
        return self._rootkit_name

    @rootkit_name.setter
    def rootkit_name(self, rootkit_name: str):
        """Sets the rootkit_name of this Rootkit.


        :param rootkit_name: The rootkit_name of this Rootkit.
        :type rootkit_name: str
        """

        self._rootkit_name = rootkit_name

    @property
    def rootkit_type(self) -> RootkitType:
        """Gets the rootkit_type of this Rootkit.


        :return: The rootkit_type of this Rootkit.
        :rtype: RootkitType
        """
        return self._rootkit_type

    @rootkit_type.setter
    def rootkit_type(self, rootkit_type: RootkitType):
        """Sets the rootkit_type of this Rootkit.


        :param rootkit_type: The rootkit_type of this Rootkit.
        :type rootkit_type: RootkitType
        """

        self._rootkit_type = rootkit_type

    @property
    def message(self) -> str:
        """Gets the message of this Rootkit.


        :return: The message of this Rootkit.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message: str):
        """Sets the message of this Rootkit.


        :param message: The message of this Rootkit.
        :type message: str
        """

        self._message = message
