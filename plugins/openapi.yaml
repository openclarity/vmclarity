openapi: 3.0.1
info:
  title: Scanner Plugin API
  version: 1.0.0
paths:

  /healthz:
    get:
      summary: Check the scanner plugin's health.
      responses:
        200:
          description: The scanner is healthy and can start receiving requests.
        503:
          description: The scanner is not healthy and cannot start receiving requests.

  /metadata:
    get:
      summary: Get metadata from the scanner plugin.
      responses:
        200:
          description: Scanner metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metadata'

  /config:
    post:
      summary: Post config to the scanner plugin and start scanner.
      responses:
        201:
          description: A new scan has been created.
        400:
          description: The request body is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        409:
          description: The scanner is not in ready state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Config'

  /status:
    get:
      summary: Get the status of the scanner.
      responses:
        200:
          description: The status of the scanner.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'


  /stop:
    post:
      summary: Stop the scanner.
      responses:
        201:
          description: The server will be stopped.

        400:
          description: The request body is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Stop'

components:
  schemas:

    Status:
      type: object
      required:
        - state
        - lastTransitionTime
      properties:
        state:
          description: |
            Describes the status of scanner.
            | Status         | Description                                                   |
            | -------------- | ------------------------------------------------------------- |
            | NotReady       | Initial state when the scanner container starts               |
            | Ready          | Scanner setup is complete and it is ready to receive requests |
            | Running        | Scanner config was received and the scanner is running        |
            | Failed         | Scanner failed                                                |
            | Done           | Scanner is completed successfully                             |
          type: string
          enum:
            - NotReady
            - Ready
            - Running
            - Failed
            - Done
        message:
          description: Human readable message.
          type: string
        lastTransitionTime:
          description: Last date time when the status has changed.
          type: string
          format: date-time

    Config:
      type: object
      description: Describes a scanner config.
      required:
        - inputDir
        - outputFile
        - outputFormat
        - timeoutSeconds
      properties:
        file:
          type: string
          description: |
            The file with the configuration required by the scanner plugin. This is a path on the filesystem to the config file.
        inputDir:
          type: string
          x-oapi-codegen-extra-tags:
            validate: required
          description: |
            The directory which should be scanned by the scanner plugin.
        outputFile:
          type: string
          x-oapi-codegen-extra-tags:
            validate: required
          description: |
            The file where the scanner plugin should store it's findings.
        outputFormat:
          type: string
          enum:
            # defines supported formats by VMClarity API
            - vmclarity-json
          x-enumNames:
            - VMClarityJSON
          x-oapi-codegen-extra-tags:
            validate: required,oneof=vmclarity-json
          description: |
            The format in which the scanner plugin should store it's findings.
            To ensure operability with VMClarity API, the format must be one of enum values.
            However, the scanner can support custom formats as well to support other
            tools (e.g. cyclondex-json, custom-format-for-tool-ABC, etc.).
            When creating VMClarity JSON output, use types library from VMClarity API to construct the output.
        timeoutSeconds:
          type: integer
          minimum: 0
          x-oapi-codegen-extra-tags:
            validate: required,gt=0
          description: |
            The maximum time in seconds that a scan started from this config
            should run for before being automatically aborted.

    Metadata:
      type: object
      description: Describes the scanner plugin.
      properties:
        apiVersion:
          type: string

    Stop:
      type: object
      required:
        - timeoutSeconds
      properties:
        timeoutSeconds:
          type: integer
          minimum: 0
          x-oapi-codegen-extra-tags:
            validate: required,gt=0
          description: After this timeout the server will be stopped.

    ErrorResponse:
      type: object
      properties:
        message:
          type: string
      description: An object that is returned for a failed API request.
