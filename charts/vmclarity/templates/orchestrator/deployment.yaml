apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "vmclarity.orchestrator.name" . }}
  labels: {{- include "vmclarity.orchestrator.labels.standard" . | nindent 4 }}
spec:
  selector:
    matchLabels: {{- include "vmclarity.orchestrator.labels.matchLabels" . | nindent 6 }}
  replicas: {{ .Values.orchestrator.replicaCount }}
  template:
    metadata:
      labels: {{- include "vmclarity.orchestrator.labels.standard" . | nindent 8 }}
    spec:
      {{- if .Values.orchestrator.affinity }}
      affinity: {{- .Values.orchestrator.affinity | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.orchestrator.nodeSelector }}
      nodeSelector: {{- .Values.orchestrator.nodeSelector | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.orchestrator.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.orchestrator.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.orchestrator.tolerations }}
      tolerations: {{- .Values.orchestrator.tolerations | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "vmclarity.orchestrator.serviceAccountName" . }}
      containers:
        - name: orchestrator
          image: {{ include "vmclarity.images.image" ( dict "imageRoot" .Values.orchestrator.image "global" .Values.global ) }}
          imagePullPolicy: {{ .Values.orchestrator.image.pullPolicy | quote }}
          {{- if .Values.orchestrator.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.orchestrator.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.orchestrator.resources }}
          resources: {{- toYaml .Values.orchestrator.resources | nindent 12 }}
          {{- end }}
          args:
            - run
            - --log-level
            - {{ .Values.orchestrator.logLevel }}
          ports:
            - name: health
              containerPort: 8082
          startupProbe:
            tcpSocket:
              port: health
          livenessProbe:
            httpGet:
              path: /healthz/live
              port: health
            periodSeconds: 30
            failureThreshold: 5
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /healthz/ready
              port: health
            periodSeconds: 30
            failureThreshold: 5
            timeoutSeconds: 10
          env:
            # Host for the VMClarity backend server
            - name: APISERVER_HOST
              value: {{ include "vmclarity.apiserver.name" . }}
            # Port number for the VMClarity backend server
            - name: APISERVER_PORT
              value: "8888"
            - name: DELETE_JOB_POLICY
              value: {{ .Values.orchestrator.deleteJobPolicy }}
            - name: SCANNER_CONTAINER_IMAGE
              value: {{ include "vmclarity.images.image" ( dict "imageRoot" .Values.orchestrator.scannerImage "global" .Values.global ) }}
            - name: SCANNER_VMCLARITY_APISERVER_ADDRESS
              value: {{ .Values.orchestrator.scannerApiServerAddress }}
            - name: TRIVY_SERVER_ADDRESS
              value: {{ .Values.orchestrator.trivyServerAddress }}
            - name: GRYPE_SERVER_ADDRESS
              value: {{ .Values.orchestrator.grypeServerAddress }}
            - name: ALTERNATIVE_FRESHCLAM_MIRROR_URL
              value: {{ .Values.orchestrator.freshclamMirrorAddress }}

            {{- if eq .Values.orchestrator.provider "aws" -}}
            {{- with .Values.orchestrator.aws }}
            - name: PROVIDER
              value: "aws"
            - name: AWS_REGION
              value: {{ .region }}
            - name: VMCLARITY_AWS_SCANNER_REGION
              value: {{ .scannerRegion }}
            - name: VMCLARITY_AWS_SUBNET_ID
              value: {{ .subnetId }}
            - name: VMCLARITY_AWS_SECURITY_GROUP_ID
              value: {{ .securityGroupId }}
            - name: VMCLARITY_AWS_KEYPAIR_NAME
              value: {{ .keypairName }}
            - name: VMCLARITY_AWS_SCANNER_AMI_ID
              value: {{ .scannerAmiId }}
            - name: VMCLARITY_AWS_SCANNER_INSTANCE_TYPE
              value: {{ .scannerInstanceType }}
            {{- end -}}
            {{- end }}

            {{- if eq .Values.orchestrator.provider "gcp" -}}
            {{- with .Values.orchestrator.gcp }}
            - name: PROVIDER
              value: "gcp"
            - name: VMCLARITY_GCP_PROJECT_ID
              value: {{ .projectId }}
            - name: VMCLARITY_GCP_SCANNER_ZONE
              value: {{ .scannerZone }}
            - name: VMCLARITY_GCP_SCANNER_SUBNETWORK
              value: {{ .scannerSubnet }}
            - name: VMCLARITY_GCP_SCANNER_MACHINE_TYPE
              value: {{ .scannerMachineType }}
            - name: VMCLARITY_GCP_SCANNER_SOURCE_IMAGE
              value: {{ .scannerSourceImage }}
            {{- end -}}
            {{- end }}

            {{- if eq .Values.orchestrator.provider "azure" -}}
            {{- with .Values.orchestrator.azure }}
            - name: PROVIDER
              value: "azure"
            - name: VMCLARITY_AZURE_SUBSCRIPTION_ID
              value: .subscriptionId
            - name: VMCLARITY_AZURE_SCANNER_LOCATION
              value: .scannerLocation
            - name: VMCLARITY_AZURE_SCANNER_RESOURCE_GROUP
              value: .scannerResourceGroup
            - name: VMCLARITY_AZURE_SCANNER_SUBNET_ID
              value: .scannerSubnetId
            - name: VMCLARITY_AZURE_SCANNER_PUBLIC_KEY
              value: .scannerPublicKey
            - name: VMCLARITY_AZURE_SCANNER_VM_SIZE
              value: .scannerVmSize
            - name: VMCLARITY_AZURE_SCANNER_IMAGE_PUBLISHER
              value: .scannerImagePublisher
            - name: VMCLARITY_AZURE_SCANNER_IMAGE_OFFER
              value: .scannerImageOffer
            - name: VMCLARITY_AZURE_SCANNER_IMAGE_SKU
              value: .scannerImageSku
            - name: VMCLARITY_AZURE_SCANNER_IMAGE_VERSION
              value: .scannerImageVersion
            - name: VMCLARITY_AZURE_SCANNER_SECURITY_GROUP
              value: .scannerSecurityGroup
            - name: VMCLARITY_AZURE_SCANNER_STORAGE_ACCOUNT_NAME
              value: .scannerStorageAccountName
            - name: VMCLARITY_AZURE_SCANNER_STORAGE_CONTAINER_NAME
              value: .scannerStorageContainerName
            {{- end -}}
            {{- end }}

            {{- if eq .Values.orchestrator.provider "kubernetes" }}
            - name: PROVIDER
              value: "kubernetes"
            {{- with .Values.orchestrator.kubernetes }}
            {{- end -}}
            {{- end }}
