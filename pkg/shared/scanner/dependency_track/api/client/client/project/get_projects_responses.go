// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/openclarity/vmclarity/pkg/shared/scanner/dependency_track/api/client/models"
)

// GetProjectsReader is a Reader for the GetProjects structure.
type GetProjectsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetProjectsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetProjectsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetProjectsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetProjectsOK creates a GetProjectsOK with default headers values
func NewGetProjectsOK() *GetProjectsOK {
	return &GetProjectsOK{}
}

/* GetProjectsOK describes a response with status code 200, with default header values.

successful operation
*/
type GetProjectsOK struct {

	/* The total number of projects

	   Format: int64
	*/
	XTotalCount int64

	Payload []*models.Project
}

func (o *GetProjectsOK) Error() string {
	return fmt.Sprintf("[GET /v1/project][%d] getProjectsOK  %+v", 200, o.Payload)
}
func (o *GetProjectsOK) GetPayload() []*models.Project {
	return o.Payload
}

func (o *GetProjectsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-Total-Count
	hdrXTotalCount := response.GetHeader("X-Total-Count")

	if hdrXTotalCount != "" {
		valxTotalCount, err := swag.ConvertInt64(hdrXTotalCount)
		if err != nil {
			return errors.InvalidType("X-Total-Count", "header", "int64", hdrXTotalCount)
		}
		o.XTotalCount = valxTotalCount
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProjectsUnauthorized creates a GetProjectsUnauthorized with default headers values
func NewGetProjectsUnauthorized() *GetProjectsUnauthorized {
	return &GetProjectsUnauthorized{}
}

/* GetProjectsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetProjectsUnauthorized struct {
}

func (o *GetProjectsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/project][%d] getProjectsUnauthorized ", 401)
}

func (o *GetProjectsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
