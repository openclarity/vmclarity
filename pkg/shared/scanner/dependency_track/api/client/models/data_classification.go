// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DataClassification data classification
//
// swagger:model DataClassification
type DataClassification struct {

	// direction
	// Enum: [INBOUND OUTBOUND BI_DIRECTIONAL UNKNOWN]
	Direction string `json:"direction,omitempty"`

	// name
	Name string `json:"name,omitempty"`
}

// Validate validates this data classification
func (m *DataClassification) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDirection(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var dataClassificationTypeDirectionPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["INBOUND","OUTBOUND","BI_DIRECTIONAL","UNKNOWN"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		dataClassificationTypeDirectionPropEnum = append(dataClassificationTypeDirectionPropEnum, v)
	}
}

const (

	// DataClassificationDirectionINBOUND captures enum value "INBOUND"
	DataClassificationDirectionINBOUND string = "INBOUND"

	// DataClassificationDirectionOUTBOUND captures enum value "OUTBOUND"
	DataClassificationDirectionOUTBOUND string = "OUTBOUND"

	// DataClassificationDirectionBIDIRECTIONAL captures enum value "BI_DIRECTIONAL"
	DataClassificationDirectionBIDIRECTIONAL string = "BI_DIRECTIONAL"

	// DataClassificationDirectionUNKNOWN captures enum value "UNKNOWN"
	DataClassificationDirectionUNKNOWN string = "UNKNOWN"
)

// prop value enum
func (m *DataClassification) validateDirectionEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, dataClassificationTypeDirectionPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *DataClassification) validateDirection(formats strfmt.Registry) error {
	if swag.IsZero(m.Direction) { // not required
		return nil
	}

	// value enum
	if err := m.validateDirectionEnum("direction", "body", m.Direction); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this data classification based on context it is used
func (m *DataClassification) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DataClassification) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DataClassification) UnmarshalBinary(b []byte) error {
	var res DataClassification
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
