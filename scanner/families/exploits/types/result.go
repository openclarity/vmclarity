// Copyright Â© 2024 Cisco Systems, Inc. and its affiliates.
// All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package types

import (
	"github.com/openclarity/vmclarity/scanner/families"
)

type Result struct {
	Metadata families.FamilyMetadata `json:"Metadata"`
	Exploits []Exploit               `json:"Exploits"`
}

func NewResult() *Result {
	return &Result{}
}

func (r *Result) Merge(scan *ScannerResult) {
	if scan == nil {
		return
	}

	// For now just append every exploit as a new exploit.
	// At some point we should check SourceDB etc. so that
	// we can remove duplicates from the list.
	r.Exploits = append(r.Exploits, scan.Exploits...)
}

func FamilyResultMetadataEnricher(result *Result) families.FamilyMetadataEnricherFunc {
	return func(meta families.FamilyMetadata) families.FamilyMetadata {
		if result != nil {
			meta.SetSummary(families.FamilySummary{
				TotalFindings: len(result.Exploits),
			})
		}

		return meta
	}
}
