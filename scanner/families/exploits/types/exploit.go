// Copyright Â© 2024 Cisco Systems, Inc. and its affiliates.
// All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package types

type Exploit struct {
	ID          string
	Name        string
	Title       string
	Description string
	CveID       string
	URLs        []string
	SourceDB    string
}

type MergedExploit struct {
	// Embed the common exploit structure
	Exploit
	// Add the option that it could be identified by multiple scanners in the family
	IdentifiedByScanners []string
}

type MergedExploits []MergedExploit

func NewMergedExploits() MergedExploits {
	return MergedExploits{}
}

func (m MergedExploits) Merge(other *ScannerResult) MergedExploits {
	for _, exploit := range other.Exploits {
		// For now just append every exploit as a new exploit.
		// At some point we should check SourceDB etc so that
		// we can remove duplicates from the list.
		mergedExploit := MergedExploit{
			Exploit:              exploit,
			IdentifiedByScanners: []string{other.ScannerName},
		}
		m = append(m, mergedExploit)
	}
	return m
}
