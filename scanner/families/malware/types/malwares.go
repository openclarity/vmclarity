// Copyright Â© 2022 Cisco Systems, Inc. and its affiliates.
// All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package types

type Malware struct {
	MalwareName string `json:"malwareName,omitempty"`
	MalwareType string `json:"malwareType,omitempty"`
	Path        string `json:"path,omitempty"`
	RuleName    string `json:"ruleName,omitempty"`
}

type Malwares struct {
	DetectedMalware []Malware
	ScansSummary    map[string]*ScanSummary // map scanner name to scan summary
}

func NewMalwares() *Malwares {
	return &Malwares{
		DetectedMalware: []Malware{},
		ScansSummary:    make(map[string]*ScanSummary),
	}
}

func (m *Malwares) Merge(result *ScannerResult) {
	if result == nil {
		return
	}

	m.DetectedMalware = append(m.DetectedMalware, result.Malwares...)
	m.ScansSummary[result.ScannerName] = result.Summary
}
