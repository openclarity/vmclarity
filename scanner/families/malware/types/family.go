// Copyright Â© 2024 Cisco Systems, Inc. and its affiliates.
// All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package types

import (
	"github.com/openclarity/vmclarity/scanner/families/types"
)

var _ types.FamilyResult = &FamilyResult{}

type FamilyResult struct {
	Metadata        types.Metadata
	DetectedMalware []DetectedMalware
	ScansSummary    map[string]*ScanSummary // map scanner name to scan summary
}

func NewFamilyResult() *FamilyResult {
	return &FamilyResult{
		DetectedMalware: []DetectedMalware{},
		ScansSummary:    make(map[string]*ScanSummary),
	}
}

func (m *FamilyResult) Merge(other *ScannerResult) *FamilyResult {
	m.DetectedMalware = append(m.DetectedMalware, other.Malware...)
	m.ScansSummary[other.ScannerName] = other.Summary

	return m
}

func (m *FamilyResult) IsResult() {}
