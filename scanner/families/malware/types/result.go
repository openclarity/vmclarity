// Copyright Â© 2024 Cisco Systems, Inc. and its affiliates.
// All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package types

import (
	"github.com/openclarity/vmclarity/scanner/families"
)

type Result struct {
	Metadata     families.ScanMetadata   `json:"Metadata"`
	Malwares     []Malware               `json:"Malwares"`
	ScansSummary map[string]*ScanSummary `json:"ScansSummary"` // map scanner name to scan summary
}

func NewResult() *Result {
	return &Result{
		Malwares:     []Malware{},
		ScansSummary: make(map[string]*ScanSummary),
	}
}

func (r *Result) Merge(meta families.ScanInputMetadata, result *ScannerResult) {
	r.Metadata.Merge(meta)

	if result != nil {
		r.Malwares = append(r.Malwares, result.Malwares...)
		r.ScansSummary[meta.ScannerName] = result.Summary
	}
}
