import React from 'react';
import TitleValueDisplay, { TitleValueDisplayRow, ValuesListDisplay } from 'components/TitleValueDisplay';
import DoublePaneDisplay from 'components/DoublePaneDisplay';
import Title from 'components/Title';
import ProgressBar, { STATUS_MAPPPING } from 'components/ProgressBar';
import SeverityDisplay from 'components/SeverityDisplay';
import SeverityWithCvssDisplay from 'components/SeverityWithCvssDisplay';
import { formatDate, getHigestVersionCvssData } from 'utils/utils';
import LinksDisplay from 'layout/Findings/LinkesDisplay';
import ScoreTag from './ScoreTag';
import { FindingsDetailsCommonFields } from '../utils';

import COLORS from 'utils/scss_variables.module.scss';

const Separator = () => <div style={{borderTop: `1px solid ${COLORS["color-grey-light"]}`}}></div>

const ScoreBar = ({score}) => {
    if (!score) {
        return null;
    }

    return (
        <ProgressBar
            status={STATUS_MAPPPING.IN_PROGRESS.value}
            itemsCompleted={score}
            itemsLeft={10 - score}
            width="130px"
            customeTitle={score}
        />
    )
}

const TabVulnerabilityDetails = ({data}) => {
    const {id, findingInfo, firstSeen, lastSeen} = data;
    const {vulnerabilityName, package: packageInfo, severity, fix, cvss, description, links} = findingInfo;
    const {name: packageName, version} = packageInfo;

    const {score, severity: cvssSeverity, vector, metrics, exploitabilityScore, impactScore} = getHigestVersionCvssData(cvss);
    const {S={}, AV={}, AC={}, PR={}, UI={}, I={}, A={}, C={}} = metrics || {};

    return (
        <DoublePaneDisplay
            leftPaneDisplay={() => (
                <>
                    <Title medium>General details</Title>
                    <TitleValueDisplayRow>
                        <TitleValueDisplay title="Vulnerability name">{vulnerabilityName}</TitleValueDisplay>
                        <TitleValueDisplay title="Package name">{packageName}</TitleValueDisplay>
                        <TitleValueDisplay title="Package version">{version}</TitleValueDisplay>
                    </TitleValueDisplayRow>
                    <TitleValueDisplayRow>
                        <TitleValueDisplay title="Severity">
                            <SeverityWithCvssDisplay
                                severity={severity}
                                cvssScore={score}
                                cvssSeverity={cvssSeverity?.toUpperCase()}
                                compareTooltipId={`severity-compare-tooltip-${id}`}
                            />
                        </TitleValueDisplay>
                        <TitleValueDisplay title="Fix versions"><ValuesListDisplay values={fix.versions} /></TitleValueDisplay>
                    </TitleValueDisplayRow>
                    <TitleValueDisplayRow>
                        <TitleValueDisplay title="Description" withOpen defaultOpen>{description}</TitleValueDisplay>
                    </TitleValueDisplayRow>
                    <LinksDisplay title="Links" links={links} />
                    <FindingsDetailsCommonFields firstSeen={firstSeen} lastSeen={lastSeen} />
                </>  
            )}
            rightPlaneDisplay={() => (
                <>
                    <Title medium>CVSS</Title>
                    <TitleValueDisplayRow>
                        <TitleValueDisplay title="Severity">
                            {!!cvssSeverity && <SeverityDisplay severity={cvssSeverity.toUpperCase()} score={score} />}
                        </TitleValueDisplay>
                        <TitleValueDisplay title="Scope">{S.value}</TitleValueDisplay>
                        <TitleValueDisplay title="Vector">{vector}</TitleValueDisplay>
                    </TitleValueDisplayRow>
                    <TitleValueDisplayRow><Separator /></TitleValueDisplayRow>
                    <TitleValueDisplayRow>
                        <TitleValueDisplay title="Exploitability score"><ScoreBar score={exploitabilityScore}/></TitleValueDisplay>
                        <TitleValueDisplay title="Attack vector">{AV.value}</TitleValueDisplay>
                        <TitleValueDisplay title="Attack complexity">{!!metrics && <ScoreTag score={AC.value.toUpperCase()} />}</TitleValueDisplay>
                    </TitleValueDisplayRow>
                    <TitleValueDisplayRow>
                        <TitleValueDisplay title="Provileges required">{PR.value}</TitleValueDisplay>
                        <TitleValueDisplay title="User interaction">{UI.value}</TitleValueDisplay>
                        <TitleValueDisplay>{/* empty item for spacing */}</TitleValueDisplay>
                    </TitleValueDisplayRow>
                    <TitleValueDisplayRow><Separator /></TitleValueDisplayRow>
                    <TitleValueDisplayRow>
                        <TitleValueDisplay title="Impact score"><ScoreBar score={impactScore}/></TitleValueDisplay>
                        <TitleValueDisplay title="Integrity">{!!metrics && <ScoreTag score={I.value.toUpperCase()} />}</TitleValueDisplay>
                        <TitleValueDisplay title="Availability">{!!metrics && <ScoreTag score={A.value.toUpperCase()} />}</TitleValueDisplay>
                    </TitleValueDisplayRow>
                    <TitleValueDisplayRow>
                        <TitleValueDisplay title="Confidentiality">{!!metrics && <ScoreTag score={C.value.toUpperCase()} />}</TitleValueDisplay>
                    </TitleValueDisplayRow>
                </>
            )}
        />
    )
}

export default TabVulnerabilityDetails;
