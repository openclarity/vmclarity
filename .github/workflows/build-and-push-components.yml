name: Build and Push Components

on:
  workflow_call:
    inputs:
      git_ref:
        required: false
        type: string
        description: 'The branch, tag or SHA to build.'
        default: ''
      image_tag:
        required: true
        type: string
        description: 'Image tag to use.'
      registry_name:
        required: false
        type: string
        description: 'Name of the registry.'
        default: ghcr.io/openclarity
      suffix:
        required: false
        type: string
        description: 'Suffix to append to the image name'
        default: ''
      bake-group:
        required: false
        type: string
        description: 'Name of the Docker Bake group of targets'
        default: default
  workflow_dispatch:
    inputs:
      git_ref:
        required: false
        type: string
        description: 'The branch, tag or SHA to build.'
        default: ''
      image_tag:
        required: true
        type: string
        description: 'Image tag to use.'
        default: latest
      registry_name:
        required: false
        type: string
        description: 'Name of the registry.'
        default: ghcr.io/openclarity
      suffix:
        required: false
        type: string
        description: 'Suffix to append to the image name'
        default: '-dev'
      bake-group:
        required: false
        type: string
        description: 'Name of the Docker Bake group of targets'
        default: default

permissions:
  packages: write

jobs:
  prepare-build:
    runs-on: ubuntu-latest
    outputs:
      timestamp: ${{ steps.timestamp.outputs.timestamp }}
      targets: ${{ steps.targets.outputs.targets }}
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          ref: ${{ github.event.inputs.git_ref }}

      - name: Set timestamp
        id: timestamp
        run: |
          ##
          ## Set timestamp variable
          ##

          echo "timestamp=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> "$GITHUB_OUTPUT"

      - name: List targets
        id: targets
        uses: docker/bake-action/subaction/list-targets@a4d7f0b5b91c14a296d792d4ec53a9db17f02e67 # v5.5.0
        with:
          target: ${{ inputs.bake-group }}

  build-and-push:
    needs: prepare-build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targets: ${{ fromJson(needs.prepare-build.outputs.targets) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@aa33708b10e362ff993539393ff100fa93ed6a27 # v3.5.0

      - name: Cache Docker layers
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.ref }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to GitHub Container Registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        uses: docker/bake-action@a4d7f0b5b91c14a296d792d4ec53a9db17f02e67 # v5.5.0
        id: bake
        with:
          targets: ${{ matrix.targets }}
          set: |
            *.platform=linux/amd64,linux/arm64
            *.output=type=image,name=${{ inputs.registry_name }}/${{ matrix.targets }},name-canonical=true,push=true
            *.cache-to=type=local,dest=/tmp/.buildx-cache
            *.cache-from=type=local,src=/tmp/.buildx-cache
        env:
          VERSION: ${{ inputs.image_tag }}
          BUILD_TIMESTAMP: ${{ needs.prepare-build.outputs.timestamp }}
          COMMIT_HASH: ${{ github.sha }}
          DOCKER_REGISTRY: ${{ inputs.registry_name }}
          SUFFIX: ${{ inputs.suffix }}
          DOCKER_TAG: ${{ inputs.image_tag }}
          BUILD_OPTS: -tags=exclude_graphdriver_btrfs,exclude_graphdriver_devicemapper
