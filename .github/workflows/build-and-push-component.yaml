name: 'Build and Push Component'

on:
  workflow_call:
    inputs:
      image_name:
        required: true
        type: string
        description: 'Name of the image to publish'
      image_tag:
        required: true
        type: string
        description: 'Image tag to build and push.'
      push:
        required: false
        type: boolean
        description: 'If set to true, push the image.'
        default: false
      timestamp:
        required: true
        type: string
        description: 'The build timestamp to be used for binaries.'
      bake_target_name:
        required: true
        type: string
        description: 'Docker Bake target name.'
      post_image_tags:
        required: false
        type: boolean
        description: |
          If set to true the image tags pushed to the repository are posted as comment for the Pull Request.
          Only works if the event type is `pull_request`.

jobs:
  build-vars:
    runs-on: ubuntu-latest
    outputs:
      digests-cache-name: ${{ steps.build-vars.outputs.digests-cache-name }}
    steps:
      - name: Set build variables
        id: build-vars
        run: |

          ##
          ## Set digests cache name
          ##
          ##    Example: digest-1234-a2850e9cc4e2b3a3
          ##

          image_name_hash="$(sha256sum <<< "${{ inputs.bake_target_name }}" | cut -f1 -d' ')"
          printf "digests-cache-name=digest-%s-%.16s" "${{ github.run_id }}" "${image_name_hash}" >> "$GITHUB_OUTPUT"

  build-and-push:
    runs-on: ubuntu-latest
    needs: build-vars
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      - name: Checkout code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@0d103c3126aa41d772a8362f6aa67afac040f80c # v3.1.0

      - name: Cache Docker layers
        uses: actions/cache@ab5e6d0c87105b4c9c2047343972218f562e4319 # v4.0.1
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.ref }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to GitHub Container Registry
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        uses: docker/bake-action@849707117b03d39aba7924c50a10376a69e88d7d # v4.1.0
        id: bake
        with:
          targets: ${{ inputs.bake_target_name }}
          set: |
            *.platform=${{ matrix.platform }}
            *.output=type=image,name=${{ inputs.image_name }},push-by-digest=true,name-canonical=true,push=${{ inputs.push }}
            *.tags=
            *.cache-to=type=local,dest=/tmp/.buildx-cache
            *.cache-from=type=local,src=/tmp/.buildx-cache
        env:
          VERSION: ${{ inputs.image_tag }}
          BUILD_TIMESTAMP: ${{ inputs.timestamp }}
          COMMIT_HASH: ${{ github.sha }}

      - name: Export digest
        if: inputs.push
        id: digest
        run: |
          mkdir -p /tmp/digests
          digest=$(jq -r '."${{ inputs.bake_target_name }}"."containerimage.digest"'<<< '${{ steps.bake.outputs.metadata }}')
          touch "/tmp/digests/${digest#sha256:}"
          echo "digest=${digest#sha256:}" >> "$GITHUB_OUTPUT"

      - name: Upload digests
        if: inputs.push
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
        with:
          name: ${{ needs.build-vars.outputs.digests-cache-name }}-${{ steps.digest.outputs.digest }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1
          compression-level: 0

  merge-and-push:
    if: inputs.push
    runs-on: ubuntu-latest
    needs:
      - build-vars
      - build-and-push
    steps:
      - name: Download digests
        uses: actions/download-artifact@87c55149d96e628cc2ef7e6fc2aab372015aec85 # v4.1.3
        with:
          pattern: ${{ needs.build-vars.outputs.digests-cache-name }}-*
          merge-multiple: true
          path: /tmp/digests

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@0d103c3126aa41d772a8362f6aa67afac040f80c # v3.1.0

      - name: Login to GitHub Container Registry
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          # shellcheck disable=SC2046
          docker buildx imagetools create \
            --tag "${{ inputs.image_name }}:${{ inputs.image_tag }}" \
            $(printf '${{ inputs.image_name }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ inputs.image_name }}:${{ inputs.image_tag }}

      - name: Save image name
        if: inputs.post_image_tags
        run: |
          mkdir -p /tmp/image-names
          echo "${{ inputs.image_name }}:${{ inputs.image_tag }}" >> "/tmp/image-names/${{ inputs.bake_target_name }}"

      - name: Upload image names
        if: inputs.post_image_tags
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
        with:
          name: image-names-${{ github.run_id }}-${{ inputs.bake_target_name }}
          path: /tmp/image-names/*
          if-no-files-found: error
