name: Release
on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
      - "v[0-9]+.[0-9]+.[0-9]+-rc.[0-9]+"

permissions:
  packages: write
  contents: write

jobs:
  verification:
    name: Verification
    uses: ./.github/workflows/reusable-verification.yml
    secrets: inherit

  build_and_push:
    needs:
      - verification
      - artifacts
      - publish_helm
    name: Build & Push
    uses: ./.github/workflows/reusable-build-and-push.yml
    with:
      image_tag: ${{ github.ref_name }}
      push: true
      use_release_repository: true

  publish_helm:
    needs: verification
    name: Publish Helm Chart
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Create Helm Chart package
        env:
          VERSION: ${{ github.ref_name }}
        run: make dist-helm-chart

      - name: Login to GitHub Container Registry
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Package and Publish Helm Chart
        env:
          VERSION: ${{ github.ref_name }}
        run: make publish-helm-chart

  artifacts:
    name: Create artifacts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Set up Go
        uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5
        with:
          # NOTE(chrisgacsal): Use actions/cache for caching Go dependency and build caches
          # as if provides better flexibility like setting the cache key which reduces cache misses significantly.
          cache: false
          go-version-file: '.go-version'

      - name: Setup Go caching
        uses: actions/cache@13aacd865c20de90d75de3b17ebe84f7a17d57d2 # v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ github.ref_name }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ github.ref_name }}-
            ${{ runner.os }}-go-${{ github.event.repository.default_branch }}-

      - name: Create vmclarity-cli manifest(s)
        env:
          VERSION: ${{ github.ref_name }}
        run: make dist-vmclarity-cli

      - name: Create Cloudformation manifest(s)
        env:
          VERSION: ${{ github.ref_name }}
        run: make dist-cloudformation

      - name: Create Azure Bicep manifest(s)
        env:
          VERSION: ${{ github.ref_name }}
        run: make dist-bicep

      - name: Create Docker Compose manifest(s)
        env:
          VERSION: ${{ github.ref_name }}
        run: make dist-docker-compose

      - name: Create Google Cloud Deployment manifest(s)
        env:
          VERSION: ${{ github.ref_name }}
        run: make dist-gcp-deployment

      - name: Upload
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4
        with:
          name: artifacts
          path: |
            dist/*.tar.gz
            dist/*.tgz
            dist/*.sha256sum
            dist/bicep/vmclarity.json
            dist/bicep/vmclarity-UI.json
          if-no-files-found: error
          compression-level: 0

  main_release:
    needs:
      - verification
      - build_and_push
      - publish_helm
      - artifacts
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0

      - name: Download artifacts
        uses: actions/download-artifact@eaceaf801fd36c7dee90939fad912460b18a1ffe # v4
        with:
          name: artifacts
          path: dist

      - name: Generate changelog
        env:
          VERSION: ${{ github.ref_name }}
        run: make generate-release-notes

      - uses: ncipollo/release-action@2c591bcc8ecdcd2db72b97d6147f871fcd833ba5 # v1
        with:
          allowUpdates: true
          artifactErrorsFailBuild: true
          artifacts: "dist/*.tar.gz,dist/*.sha256sum,dist/bicep/vmclarity.json,dist/bicep/vmclarity-UI.json"
          bodyFile: "dist/CHANGELOG.md"
          draft: true
          name: "Release ${{ github.ref_name }}"
          updateOnlyUnreleased: true

  # TODO(sambetts) We need to publish a tag in the format "api/<version>" tag
  # so that go mod is able to import the api module without overriding. We need
  # to work out how to do this cleanly from github actions on release so that
  # we don't need to manage it manually. We could do something this which will
  # create another release:
  #
  # api_release:
  #   needs: release
  #   name: Release API Module
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0
  #     - name: Release API
  #       uses: softprops/action-gh-release@v1
  #       with:
  #         name: VMClarity {{ github.ref }} API
  #         body: See main {{ github.ref }} release for release notes.
  #         tag_name: api/{{ github.ref }}
