// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: proto/provider_service.proto

package provider_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RunScanningJobParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// where to run the scanning job. location concept is similar to region in AWS.
	// TODO do we really need location? why do we care where the user will run his scanner?
	Location string `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	// unique identifier of the scanning job. can be used with tags to identify the scanning job.
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// configuration for how to run the job
	Config *ScanningJobConfig `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *RunScanningJobParams) Reset() {
	*x = RunScanningJobParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_provider_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunScanningJobParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunScanningJobParams) ProtoMessage() {}

func (x *RunScanningJobParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_provider_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunScanningJobParams.ProtoReflect.Descriptor instead.
func (*RunScanningJobParams) Descriptor() ([]byte, []int) {
	return file_proto_provider_service_proto_rawDescGZIP(), []int{0}
}

func (x *RunScanningJobParams) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *RunScanningJobParams) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RunScanningJobParams) GetConfig() *ScanningJobConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type RunScanningJobResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the running scanning job instance.
	Instance *Instance `protobuf:"bytes,1,opt,name=instance,proto3" json:"instance,omitempty"`
}

func (x *RunScanningJobResult) Reset() {
	*x = RunScanningJobResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_provider_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunScanningJobResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunScanningJobResult) ProtoMessage() {}

func (x *RunScanningJobResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_provider_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunScanningJobResult.ProtoReflect.Descriptor instead.
func (*RunScanningJobResult) Descriptor() ([]byte, []int) {
	return file_proto_provider_service_proto_rawDescGZIP(), []int{1}
}

func (x *RunScanningJobResult) GetInstance() *Instance {
	if x != nil {
		return x.Instance
	}
	return nil
}

type DiscoverScopesParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DiscoverScopesParams) Reset() {
	*x = DiscoverScopesParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_provider_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscoverScopesParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoverScopesParams) ProtoMessage() {}

func (x *DiscoverScopesParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_provider_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoverScopesParams.ProtoReflect.Descriptor instead.
func (*DiscoverScopesParams) Descriptor() ([]byte, []int) {
	return file_proto_provider_service_proto_rawDescGZIP(), []int{2}
}

type DiscoverScopesResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// json marshaled representation of scopes. See backend api for possible scopes types (models.Scopes).
	// TODO once we have a design for a generic scope representation, we will not need to add each new scope type to the api.
	Scopes uint32 `protobuf:"varint,1,opt,name=scopes,proto3" json:"scopes,omitempty"`
}

func (x *DiscoverScopesResult) Reset() {
	*x = DiscoverScopesResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_provider_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscoverScopesResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoverScopesResult) ProtoMessage() {}

func (x *DiscoverScopesResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_provider_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoverScopesResult.ProtoReflect.Descriptor instead.
func (*DiscoverScopesResult) Descriptor() ([]byte, []int) {
	return file_proto_provider_service_proto_rawDescGZIP(), []int{3}
}

func (x *DiscoverScopesResult) GetScopes() uint32 {
	if x != nil {
		return x.Scopes
	}
	return 0
}

type DiscoverInstancesParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// json marshaled representation of scanScope. See backend api for possible scopes types (models.ScanScopeType).
	// TODO once we have a design for a generic scope representation, we will not need to add each new scope type to the api.
	ScanScopes uint32 `protobuf:"varint,1,opt,name=scanScopes,proto3" json:"scanScopes,omitempty"`
}

func (x *DiscoverInstancesParams) Reset() {
	*x = DiscoverInstancesParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_provider_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscoverInstancesParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoverInstancesParams) ProtoMessage() {}

func (x *DiscoverInstancesParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_provider_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoverInstancesParams.ProtoReflect.Descriptor instead.
func (*DiscoverInstancesParams) Descriptor() ([]byte, []int) {
	return file_proto_provider_service_proto_rawDescGZIP(), []int{4}
}

func (x *DiscoverInstancesParams) GetScanScopes() uint32 {
	if x != nil {
		return x.ScanScopes
	}
	return 0
}

type DiscoverInstancesResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instances []*Instance `protobuf:"bytes,1,rep,name=instances,proto3" json:"instances,omitempty"`
}

func (x *DiscoverInstancesResult) Reset() {
	*x = DiscoverInstancesResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_provider_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscoverInstancesResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoverInstancesResult) ProtoMessage() {}

func (x *DiscoverInstancesResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_provider_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoverInstancesResult.ProtoReflect.Descriptor instead.
func (*DiscoverInstancesResult) Descriptor() ([]byte, []int) {
	return file_proto_provider_service_proto_rawDescGZIP(), []int{5}
}

func (x *DiscoverInstancesResult) GetInstances() []*Instance {
	if x != nil {
		return x.Instances
	}
	return nil
}

type GetInstanceRootVolumeParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceID       string `protobuf:"bytes,1,opt,name=instanceID,proto3" json:"instanceID,omitempty"`
	InstanceLocation string `protobuf:"bytes,2,opt,name=instanceLocation,proto3" json:"instanceLocation,omitempty"`
}

func (x *GetInstanceRootVolumeParams) Reset() {
	*x = GetInstanceRootVolumeParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_provider_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInstanceRootVolumeParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstanceRootVolumeParams) ProtoMessage() {}

func (x *GetInstanceRootVolumeParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_provider_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstanceRootVolumeParams.ProtoReflect.Descriptor instead.
func (*GetInstanceRootVolumeParams) Descriptor() ([]byte, []int) {
	return file_proto_provider_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetInstanceRootVolumeParams) GetInstanceID() string {
	if x != nil {
		return x.InstanceID
	}
	return ""
}

func (x *GetInstanceRootVolumeParams) GetInstanceLocation() string {
	if x != nil {
		return x.InstanceLocation
	}
	return ""
}

type GetInstanceRootVolumeResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Volume *Volume `protobuf:"bytes,1,opt,name=volume,proto3" json:"volume,omitempty"`
}

func (x *GetInstanceRootVolumeResult) Reset() {
	*x = GetInstanceRootVolumeResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_provider_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInstanceRootVolumeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstanceRootVolumeResult) ProtoMessage() {}

func (x *GetInstanceRootVolumeResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_provider_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstanceRootVolumeResult.ProtoReflect.Descriptor instead.
func (*GetInstanceRootVolumeResult) Descriptor() ([]byte, []int) {
	return file_proto_provider_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetInstanceRootVolumeResult) GetVolume() *Volume {
	if x != nil {
		return x.Volume
	}
	return nil
}

type WaitForInstanceReadyParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceID       string `protobuf:"bytes,1,opt,name=instanceID,proto3" json:"instanceID,omitempty"`
	InstanceLocation string `protobuf:"bytes,2,opt,name=instanceLocation,proto3" json:"instanceLocation,omitempty"`
}

func (x *WaitForInstanceReadyParams) Reset() {
	*x = WaitForInstanceReadyParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_provider_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WaitForInstanceReadyParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitForInstanceReadyParams) ProtoMessage() {}

func (x *WaitForInstanceReadyParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_provider_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitForInstanceReadyParams.ProtoReflect.Descriptor instead.
func (*WaitForInstanceReadyParams) Descriptor() ([]byte, []int) {
	return file_proto_provider_service_proto_rawDescGZIP(), []int{8}
}

func (x *WaitForInstanceReadyParams) GetInstanceID() string {
	if x != nil {
		return x.InstanceID
	}
	return ""
}

func (x *WaitForInstanceReadyParams) GetInstanceLocation() string {
	if x != nil {
		return x.InstanceLocation
	}
	return ""
}

type WaitForInstanceReadyResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WaitForInstanceReadyResult) Reset() {
	*x = WaitForInstanceReadyResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_provider_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WaitForInstanceReadyResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitForInstanceReadyResult) ProtoMessage() {}

func (x *WaitForInstanceReadyResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_provider_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitForInstanceReadyResult.ProtoReflect.Descriptor instead.
func (*WaitForInstanceReadyResult) Descriptor() ([]byte, []int) {
	return file_proto_provider_service_proto_rawDescGZIP(), []int{9}
}

type DeleteInstanceParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceID       string `protobuf:"bytes,1,opt,name=instanceID,proto3" json:"instanceID,omitempty"`
	InstanceLocation string `protobuf:"bytes,2,opt,name=instanceLocation,proto3" json:"instanceLocation,omitempty"`
}

func (x *DeleteInstanceParams) Reset() {
	*x = DeleteInstanceParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_provider_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInstanceParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInstanceParams) ProtoMessage() {}

func (x *DeleteInstanceParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_provider_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInstanceParams.ProtoReflect.Descriptor instead.
func (*DeleteInstanceParams) Descriptor() ([]byte, []int) {
	return file_proto_provider_service_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteInstanceParams) GetInstanceID() string {
	if x != nil {
		return x.InstanceID
	}
	return ""
}

func (x *DeleteInstanceParams) GetInstanceLocation() string {
	if x != nil {
		return x.InstanceLocation
	}
	return ""
}

type DeleteInstanceResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteInstanceResult) Reset() {
	*x = DeleteInstanceResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_provider_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInstanceResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInstanceResult) ProtoMessage() {}

func (x *DeleteInstanceResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_provider_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInstanceResult.ProtoReflect.Descriptor instead.
func (*DeleteInstanceResult) Descriptor() ([]byte, []int) {
	return file_proto_provider_service_proto_rawDescGZIP(), []int{11}
}

type AttachVolumeToInstanceParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceID       string `protobuf:"bytes,1,opt,name=instanceID,proto3" json:"instanceID,omitempty"`
	InstanceLocation string `protobuf:"bytes,2,opt,name=instanceLocation,proto3" json:"instanceLocation,omitempty"`
	VolumeID         string `protobuf:"bytes,3,opt,name=volumeID,proto3" json:"volumeID,omitempty"`
	DeviceName       string `protobuf:"bytes,4,opt,name=deviceName,proto3" json:"deviceName,omitempty"`
}

func (x *AttachVolumeToInstanceParams) Reset() {
	*x = AttachVolumeToInstanceParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_provider_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachVolumeToInstanceParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachVolumeToInstanceParams) ProtoMessage() {}

func (x *AttachVolumeToInstanceParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_provider_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachVolumeToInstanceParams.ProtoReflect.Descriptor instead.
func (*AttachVolumeToInstanceParams) Descriptor() ([]byte, []int) {
	return file_proto_provider_service_proto_rawDescGZIP(), []int{12}
}

func (x *AttachVolumeToInstanceParams) GetInstanceID() string {
	if x != nil {
		return x.InstanceID
	}
	return ""
}

func (x *AttachVolumeToInstanceParams) GetInstanceLocation() string {
	if x != nil {
		return x.InstanceLocation
	}
	return ""
}

func (x *AttachVolumeToInstanceParams) GetVolumeID() string {
	if x != nil {
		return x.VolumeID
	}
	return ""
}

func (x *AttachVolumeToInstanceParams) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

type AttachVolumeToInstanceResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AttachVolumeToInstanceResult) Reset() {
	*x = AttachVolumeToInstanceResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_provider_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachVolumeToInstanceResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachVolumeToInstanceResult) ProtoMessage() {}

func (x *AttachVolumeToInstanceResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_provider_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachVolumeToInstanceResult.ProtoReflect.Descriptor instead.
func (*AttachVolumeToInstanceResult) Descriptor() ([]byte, []int) {
	return file_proto_provider_service_proto_rawDescGZIP(), []int{13}
}

type CopySnapshotParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SnapshotID       string `protobuf:"bytes,1,opt,name=snapshotID,proto3" json:"snapshotID,omitempty"`
	SnapshotLocation string `protobuf:"bytes,2,opt,name=snapshotLocation,proto3" json:"snapshotLocation,omitempty"`
	DestLocation     string `protobuf:"bytes,3,opt,name=destLocation,proto3" json:"destLocation,omitempty"`
}

func (x *CopySnapshotParams) Reset() {
	*x = CopySnapshotParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_provider_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CopySnapshotParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopySnapshotParams) ProtoMessage() {}

func (x *CopySnapshotParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_provider_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopySnapshotParams.ProtoReflect.Descriptor instead.
func (*CopySnapshotParams) Descriptor() ([]byte, []int) {
	return file_proto_provider_service_proto_rawDescGZIP(), []int{14}
}

func (x *CopySnapshotParams) GetSnapshotID() string {
	if x != nil {
		return x.SnapshotID
	}
	return ""
}

func (x *CopySnapshotParams) GetSnapshotLocation() string {
	if x != nil {
		return x.SnapshotLocation
	}
	return ""
}

func (x *CopySnapshotParams) GetDestLocation() string {
	if x != nil {
		return x.DestLocation
	}
	return ""
}

type CopySnapshotResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Snapshot *Snapshot `protobuf:"bytes,1,opt,name=snapshot,proto3" json:"snapshot,omitempty"`
}

func (x *CopySnapshotResult) Reset() {
	*x = CopySnapshotResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_provider_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CopySnapshotResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopySnapshotResult) ProtoMessage() {}

func (x *CopySnapshotResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_provider_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopySnapshotResult.ProtoReflect.Descriptor instead.
func (*CopySnapshotResult) Descriptor() ([]byte, []int) {
	return file_proto_provider_service_proto_rawDescGZIP(), []int{15}
}

func (x *CopySnapshotResult) GetSnapshot() *Snapshot {
	if x != nil {
		return x.Snapshot
	}
	return nil
}

type DeleteSnapshotParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SnapshotID       string `protobuf:"bytes,1,opt,name=snapshotID,proto3" json:"snapshotID,omitempty"`
	SnapshotLocation string `protobuf:"bytes,2,opt,name=snapshotLocation,proto3" json:"snapshotLocation,omitempty"`
}

func (x *DeleteSnapshotParams) Reset() {
	*x = DeleteSnapshotParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_provider_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSnapshotParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSnapshotParams) ProtoMessage() {}

func (x *DeleteSnapshotParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_provider_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSnapshotParams.ProtoReflect.Descriptor instead.
func (*DeleteSnapshotParams) Descriptor() ([]byte, []int) {
	return file_proto_provider_service_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteSnapshotParams) GetSnapshotID() string {
	if x != nil {
		return x.SnapshotID
	}
	return ""
}

func (x *DeleteSnapshotParams) GetSnapshotLocation() string {
	if x != nil {
		return x.SnapshotLocation
	}
	return ""
}

type DeleteSnapshotResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteSnapshotResult) Reset() {
	*x = DeleteSnapshotResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_provider_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSnapshotResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSnapshotResult) ProtoMessage() {}

func (x *DeleteSnapshotResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_provider_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSnapshotResult.ProtoReflect.Descriptor instead.
func (*DeleteSnapshotResult) Descriptor() ([]byte, []int) {
	return file_proto_provider_service_proto_rawDescGZIP(), []int{17}
}

type WaitForSnapshotReadyParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SnapshotID       string `protobuf:"bytes,1,opt,name=snapshotID,proto3" json:"snapshotID,omitempty"`
	SnapshotLocation string `protobuf:"bytes,2,opt,name=snapshotLocation,proto3" json:"snapshotLocation,omitempty"`
}

func (x *WaitForSnapshotReadyParams) Reset() {
	*x = WaitForSnapshotReadyParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_provider_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WaitForSnapshotReadyParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitForSnapshotReadyParams) ProtoMessage() {}

func (x *WaitForSnapshotReadyParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_provider_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitForSnapshotReadyParams.ProtoReflect.Descriptor instead.
func (*WaitForSnapshotReadyParams) Descriptor() ([]byte, []int) {
	return file_proto_provider_service_proto_rawDescGZIP(), []int{18}
}

func (x *WaitForSnapshotReadyParams) GetSnapshotID() string {
	if x != nil {
		return x.SnapshotID
	}
	return ""
}

func (x *WaitForSnapshotReadyParams) GetSnapshotLocation() string {
	if x != nil {
		return x.SnapshotLocation
	}
	return ""
}

type WaitForSnapshotReadyResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WaitForSnapshotReadyResult) Reset() {
	*x = WaitForSnapshotReadyResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_provider_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WaitForSnapshotReadyResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitForSnapshotReadyResult) ProtoMessage() {}

func (x *WaitForSnapshotReadyResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_provider_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitForSnapshotReadyResult.ProtoReflect.Descriptor instead.
func (*WaitForSnapshotReadyResult) Descriptor() ([]byte, []int) {
	return file_proto_provider_service_proto_rawDescGZIP(), []int{19}
}

type CreateVolumeFromSnapshotParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SnapshotID       string `protobuf:"bytes,1,opt,name=snapshotID,proto3" json:"snapshotID,omitempty"`
	SnapshotLocation string `protobuf:"bytes,2,opt,name=snapshotLocation,proto3" json:"snapshotLocation,omitempty"`
	AvailabilityZone string `protobuf:"bytes,3,opt,name=availabilityZone,proto3" json:"availabilityZone,omitempty"`
}

func (x *CreateVolumeFromSnapshotParams) Reset() {
	*x = CreateVolumeFromSnapshotParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_provider_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVolumeFromSnapshotParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVolumeFromSnapshotParams) ProtoMessage() {}

func (x *CreateVolumeFromSnapshotParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_provider_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVolumeFromSnapshotParams.ProtoReflect.Descriptor instead.
func (*CreateVolumeFromSnapshotParams) Descriptor() ([]byte, []int) {
	return file_proto_provider_service_proto_rawDescGZIP(), []int{20}
}

func (x *CreateVolumeFromSnapshotParams) GetSnapshotID() string {
	if x != nil {
		return x.SnapshotID
	}
	return ""
}

func (x *CreateVolumeFromSnapshotParams) GetSnapshotLocation() string {
	if x != nil {
		return x.SnapshotLocation
	}
	return ""
}

func (x *CreateVolumeFromSnapshotParams) GetAvailabilityZone() string {
	if x != nil {
		return x.AvailabilityZone
	}
	return ""
}

type CreateVolumeFromSnapshotResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Volume *Volume `protobuf:"bytes,1,opt,name=volume,proto3" json:"volume,omitempty"`
}

func (x *CreateVolumeFromSnapshotResult) Reset() {
	*x = CreateVolumeFromSnapshotResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_provider_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVolumeFromSnapshotResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVolumeFromSnapshotResult) ProtoMessage() {}

func (x *CreateVolumeFromSnapshotResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_provider_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVolumeFromSnapshotResult.ProtoReflect.Descriptor instead.
func (*CreateVolumeFromSnapshotResult) Descriptor() ([]byte, []int) {
	return file_proto_provider_service_proto_rawDescGZIP(), []int{21}
}

func (x *CreateVolumeFromSnapshotResult) GetVolume() *Volume {
	if x != nil {
		return x.Volume
	}
	return nil
}

type TakeVolumeSnapshotParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VolumeID       string `protobuf:"bytes,1,opt,name=volumeID,proto3" json:"volumeID,omitempty"`
	VolumeLocation string `protobuf:"bytes,2,opt,name=volumeLocation,proto3" json:"volumeLocation,omitempty"`
}

func (x *TakeVolumeSnapshotParams) Reset() {
	*x = TakeVolumeSnapshotParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_provider_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TakeVolumeSnapshotParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakeVolumeSnapshotParams) ProtoMessage() {}

func (x *TakeVolumeSnapshotParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_provider_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakeVolumeSnapshotParams.ProtoReflect.Descriptor instead.
func (*TakeVolumeSnapshotParams) Descriptor() ([]byte, []int) {
	return file_proto_provider_service_proto_rawDescGZIP(), []int{22}
}

func (x *TakeVolumeSnapshotParams) GetVolumeID() string {
	if x != nil {
		return x.VolumeID
	}
	return ""
}

func (x *TakeVolumeSnapshotParams) GetVolumeLocation() string {
	if x != nil {
		return x.VolumeLocation
	}
	return ""
}

type TakeVolumeSnapshotResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Snapshot *Snapshot `protobuf:"bytes,1,opt,name=snapshot,proto3" json:"snapshot,omitempty"`
}

func (x *TakeVolumeSnapshotResult) Reset() {
	*x = TakeVolumeSnapshotResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_provider_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TakeVolumeSnapshotResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakeVolumeSnapshotResult) ProtoMessage() {}

func (x *TakeVolumeSnapshotResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_provider_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakeVolumeSnapshotResult.ProtoReflect.Descriptor instead.
func (*TakeVolumeSnapshotResult) Descriptor() ([]byte, []int) {
	return file_proto_provider_service_proto_rawDescGZIP(), []int{23}
}

func (x *TakeVolumeSnapshotResult) GetSnapshot() *Snapshot {
	if x != nil {
		return x.Snapshot
	}
	return nil
}

type WaitForVolumeReadyParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VolumeID       string `protobuf:"bytes,1,opt,name=volumeID,proto3" json:"volumeID,omitempty"`
	VolumeLocation string `protobuf:"bytes,2,opt,name=volumeLocation,proto3" json:"volumeLocation,omitempty"`
}

func (x *WaitForVolumeReadyParams) Reset() {
	*x = WaitForVolumeReadyParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_provider_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WaitForVolumeReadyParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitForVolumeReadyParams) ProtoMessage() {}

func (x *WaitForVolumeReadyParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_provider_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitForVolumeReadyParams.ProtoReflect.Descriptor instead.
func (*WaitForVolumeReadyParams) Descriptor() ([]byte, []int) {
	return file_proto_provider_service_proto_rawDescGZIP(), []int{24}
}

func (x *WaitForVolumeReadyParams) GetVolumeID() string {
	if x != nil {
		return x.VolumeID
	}
	return ""
}

func (x *WaitForVolumeReadyParams) GetVolumeLocation() string {
	if x != nil {
		return x.VolumeLocation
	}
	return ""
}

type WaitForVolumeReadyResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WaitForVolumeReadyResult) Reset() {
	*x = WaitForVolumeReadyResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_provider_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WaitForVolumeReadyResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitForVolumeReadyResult) ProtoMessage() {}

func (x *WaitForVolumeReadyResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_provider_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitForVolumeReadyResult.ProtoReflect.Descriptor instead.
func (*WaitForVolumeReadyResult) Descriptor() ([]byte, []int) {
	return file_proto_provider_service_proto_rawDescGZIP(), []int{25}
}

type WaitForVolumeAttachedParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VolumeID       string `protobuf:"bytes,1,opt,name=volumeID,proto3" json:"volumeID,omitempty"`
	VolumeLocation string `protobuf:"bytes,2,opt,name=volumeLocation,proto3" json:"volumeLocation,omitempty"`
}

func (x *WaitForVolumeAttachedParams) Reset() {
	*x = WaitForVolumeAttachedParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_provider_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WaitForVolumeAttachedParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitForVolumeAttachedParams) ProtoMessage() {}

func (x *WaitForVolumeAttachedParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_provider_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitForVolumeAttachedParams.ProtoReflect.Descriptor instead.
func (*WaitForVolumeAttachedParams) Descriptor() ([]byte, []int) {
	return file_proto_provider_service_proto_rawDescGZIP(), []int{26}
}

func (x *WaitForVolumeAttachedParams) GetVolumeID() string {
	if x != nil {
		return x.VolumeID
	}
	return ""
}

func (x *WaitForVolumeAttachedParams) GetVolumeLocation() string {
	if x != nil {
		return x.VolumeLocation
	}
	return ""
}

type WaitForVolumeAttachedResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WaitForVolumeAttachedResult) Reset() {
	*x = WaitForVolumeAttachedResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_provider_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WaitForVolumeAttachedResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitForVolumeAttachedResult) ProtoMessage() {}

func (x *WaitForVolumeAttachedResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_provider_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitForVolumeAttachedResult.ProtoReflect.Descriptor instead.
func (*WaitForVolumeAttachedResult) Descriptor() ([]byte, []int) {
	return file_proto_provider_service_proto_rawDescGZIP(), []int{27}
}

type DeleteVolumeParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VolumeID       string `protobuf:"bytes,1,opt,name=volumeID,proto3" json:"volumeID,omitempty"`
	VolumeLocation string `protobuf:"bytes,2,opt,name=volumeLocation,proto3" json:"volumeLocation,omitempty"`
}

func (x *DeleteVolumeParams) Reset() {
	*x = DeleteVolumeParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_provider_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteVolumeParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVolumeParams) ProtoMessage() {}

func (x *DeleteVolumeParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_provider_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVolumeParams.ProtoReflect.Descriptor instead.
func (*DeleteVolumeParams) Descriptor() ([]byte, []int) {
	return file_proto_provider_service_proto_rawDescGZIP(), []int{28}
}

func (x *DeleteVolumeParams) GetVolumeID() string {
	if x != nil {
		return x.VolumeID
	}
	return ""
}

func (x *DeleteVolumeParams) GetVolumeLocation() string {
	if x != nil {
		return x.VolumeLocation
	}
	return ""
}

type DeleteVolumeResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteVolumeResult) Reset() {
	*x = DeleteVolumeResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_provider_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteVolumeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVolumeResult) ProtoMessage() {}

func (x *DeleteVolumeResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_provider_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVolumeResult.ProtoReflect.Descriptor instead.
func (*DeleteVolumeResult) Descriptor() ([]byte, []int) {
	return file_proto_provider_service_proto_rawDescGZIP(), []int{29}
}

// ScanningJobConfig - the wording:
// scanner instance - the VM to run the VMClarity CLI and all related stuff on (DBs for example)
// scanner CLI - VMClarity CLI tool that does the actual scanning. This is packed in a container and should be run inside the scanner.
type ScanningJobConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// scanner CLI Container Image to use containing the vmclarity-cli and tools
	ScannerImage string `protobuf:"bytes,1,opt,name=scannerImage,proto3" json:"scannerImage,omitempty"`
	// scanner CLI config yaml (families config yaml) serialized in json format
	ScannerCLIConfig string `protobuf:"bytes,2,opt,name=scannerCLIConfig,proto3" json:"scannerCLIConfig,omitempty"`
	// The backend address for the scanner CLI to export to the results.
	VmClarityAddress string `protobuf:"bytes,3,opt,name=vmClarityAddress,proto3" json:"vmClarityAddress,omitempty"`
	// The ID of the ScanResult that the scanner CLI should update in the backend.
	ScanResultID string `protobuf:"bytes,4,opt,name=scanResultID,proto3" json:"scanResultID,omitempty"`
	// The name of the key pair to set on the scanner instance, ignored if not set, used mainly for debugging.
	KeyPairName string `protobuf:"bytes,5,opt,name=keyPairName,proto3" json:"keyPairName,omitempty"`
	// configuration for how to run the scanner instance (optional)
	ScannerInstanceCreationConfig *ScannerInstanceCreationConfig `protobuf:"bytes,6,opt,name=scannerInstanceCreationConfig,proto3" json:"scannerInstanceCreationConfig,omitempty"`
}

func (x *ScanningJobConfig) Reset() {
	*x = ScanningJobConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_provider_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScanningJobConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanningJobConfig) ProtoMessage() {}

func (x *ScanningJobConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_provider_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanningJobConfig.ProtoReflect.Descriptor instead.
func (*ScanningJobConfig) Descriptor() ([]byte, []int) {
	return file_proto_provider_service_proto_rawDescGZIP(), []int{30}
}

func (x *ScanningJobConfig) GetScannerImage() string {
	if x != nil {
		return x.ScannerImage
	}
	return ""
}

func (x *ScanningJobConfig) GetScannerCLIConfig() string {
	if x != nil {
		return x.ScannerCLIConfig
	}
	return ""
}

func (x *ScanningJobConfig) GetVmClarityAddress() string {
	if x != nil {
		return x.VmClarityAddress
	}
	return ""
}

func (x *ScanningJobConfig) GetScanResultID() string {
	if x != nil {
		return x.ScanResultID
	}
	return ""
}

func (x *ScanningJobConfig) GetKeyPairName() string {
	if x != nil {
		return x.KeyPairName
	}
	return ""
}

func (x *ScanningJobConfig) GetScannerInstanceCreationConfig() *ScannerInstanceCreationConfig {
	if x != nil {
		return x.ScannerInstanceCreationConfig
	}
	return nil
}

type ScannerInstanceCreationConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxPrice         string `protobuf:"bytes,1,opt,name=MaxPrice,proto3" json:"MaxPrice,omitempty"`
	RetryMaxAttempts int32  `protobuf:"varint,2,opt,name=RetryMaxAttempts,proto3" json:"RetryMaxAttempts,omitempty"`
	UseSpotInstances bool   `protobuf:"varint,3,opt,name=UseSpotInstances,proto3" json:"UseSpotInstances,omitempty"`
}

func (x *ScannerInstanceCreationConfig) Reset() {
	*x = ScannerInstanceCreationConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_provider_service_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScannerInstanceCreationConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScannerInstanceCreationConfig) ProtoMessage() {}

func (x *ScannerInstanceCreationConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_provider_service_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScannerInstanceCreationConfig.ProtoReflect.Descriptor instead.
func (*ScannerInstanceCreationConfig) Descriptor() ([]byte, []int) {
	return file_proto_provider_service_proto_rawDescGZIP(), []int{31}
}

func (x *ScannerInstanceCreationConfig) GetMaxPrice() string {
	if x != nil {
		return x.MaxPrice
	}
	return ""
}

func (x *ScannerInstanceCreationConfig) GetRetryMaxAttempts() int32 {
	if x != nil {
		return x.RetryMaxAttempts
	}
	return 0
}

func (x *ScannerInstanceCreationConfig) GetUseSpotInstances() bool {
	if x != nil {
		return x.UseSpotInstances
	}
	return false
}

type Instance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Location     string                 `protobuf:"bytes,2,opt,name=Location,proto3" json:"Location,omitempty"`
	Image        string                 `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	InstanceType string                 `protobuf:"bytes,4,opt,name=instanceType,proto3" json:"instanceType,omitempty"`
	Platform     string                 `protobuf:"bytes,5,opt,name=platform,proto3" json:"platform,omitempty"`
	Tags         []*Tag                 `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`
	LaunchTime   *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=launchTime,proto3" json:"launchTime,omitempty"`
}

func (x *Instance) Reset() {
	*x = Instance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_provider_service_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Instance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instance) ProtoMessage() {}

func (x *Instance) ProtoReflect() protoreflect.Message {
	mi := &file_proto_provider_service_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instance.ProtoReflect.Descriptor instead.
func (*Instance) Descriptor() ([]byte, []int) {
	return file_proto_provider_service_proto_rawDescGZIP(), []int{32}
}

func (x *Instance) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Instance) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *Instance) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Instance) GetInstanceType() string {
	if x != nil {
		return x.InstanceType
	}
	return ""
}

func (x *Instance) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *Instance) GetTags() []*Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Instance) GetLaunchTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LaunchTime
	}
	return nil
}

type AccountScope struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// json representation of the scope
	Scope string `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
}

func (x *AccountScope) Reset() {
	*x = AccountScope{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_provider_service_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountScope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountScope) ProtoMessage() {}

func (x *AccountScope) ProtoReflect() protoreflect.Message {
	mi := &file_proto_provider_service_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountScope.ProtoReflect.Descriptor instead.
func (*AccountScope) Descriptor() ([]byte, []int) {
	return file_proto_provider_service_proto_rawDescGZIP(), []int{33}
}

func (x *AccountScope) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

type ScanScope struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// json representation of the scan scope
	Scope string `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
}

func (x *ScanScope) Reset() {
	*x = ScanScope{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_provider_service_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScanScope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanScope) ProtoMessage() {}

func (x *ScanScope) ProtoReflect() protoreflect.Message {
	mi := &file_proto_provider_service_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanScope.ProtoReflect.Descriptor instead.
func (*ScanScope) Descriptor() ([]byte, []int) {
	return file_proto_provider_service_proto_rawDescGZIP(), []int{34}
}

func (x *ScanScope) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

type Volume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Location string `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *Volume) Reset() {
	*x = Volume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_provider_service_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Volume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Volume) ProtoMessage() {}

func (x *Volume) ProtoReflect() protoreflect.Message {
	mi := &file_proto_provider_service_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Volume.ProtoReflect.Descriptor instead.
func (*Volume) Descriptor() ([]byte, []int) {
	return file_proto_provider_service_proto_rawDescGZIP(), []int{35}
}

func (x *Volume) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Volume) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

type Snapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Location string `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *Snapshot) Reset() {
	*x = Snapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_provider_service_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Snapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Snapshot) ProtoMessage() {}

func (x *Snapshot) ProtoReflect() protoreflect.Message {
	mi := &file_proto_provider_service_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Snapshot.ProtoReflect.Descriptor instead.
func (*Snapshot) Descriptor() ([]byte, []int) {
	return file_proto_provider_service_proto_rawDescGZIP(), []int{36}
}

func (x *Snapshot) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Snapshot) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

type Tag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Val string `protobuf:"bytes,2,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *Tag) Reset() {
	*x = Tag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_provider_service_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tag) ProtoMessage() {}

func (x *Tag) ProtoReflect() protoreflect.Message {
	mi := &file_proto_provider_service_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tag.ProtoReflect.Descriptor instead.
func (*Tag) Descriptor() ([]byte, []int) {
	return file_proto_provider_service_proto_rawDescGZIP(), []int{37}
}

func (x *Tag) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Tag) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

var File_proto_provider_service_proto protoreflect.FileDescriptor

var file_proto_provider_service_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x77, 0x0a, 0x14, 0x52, 0x75, 0x6e,
	0x53, 0x63, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x4a, 0x6f, 0x62, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x33, 0x0a,
	0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x69, 0x6e,
	0x67, 0x4a, 0x6f, 0x62, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x22, 0x46, 0x0a, 0x14, 0x52, 0x75, 0x6e, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x69, 0x6e,
	0x67, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2e, 0x0a, 0x08, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x22, 0x2e, 0x0a, 0x14, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x53, 0x63,
	0x6f, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x73, 0x22, 0x39, 0x0a, 0x17, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x63, 0x61, 0x6e, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x73, 0x63, 0x61, 0x6e, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x22, 0x4b, 0x0a,
	0x17, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x30, 0x0a, 0x09, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x69, 0x0a, 0x1b, 0x47, 0x65,
	0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x56, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x47, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x28, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x22, 0x68,
	0x0a, 0x1a, 0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x61, 0x64, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x1c, 0x0a, 0x1a, 0x57, 0x61, 0x69, 0x74,
	0x46, 0x6f, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x61, 0x64, 0x79,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x62, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x12, 0x2a,
	0x0a, 0x10, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x16, 0x0a, 0x14, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0xa6, 0x01, 0x0a, 0x1c, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x56, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x54, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x1e, 0x0a, 0x1c, 0x41,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x54, 0x6f, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x84, 0x01, 0x0a, 0x12,
	0x43, 0x6f, 0x70, 0x79, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22,
	0x0a, 0x0c, 0x64, 0x65, 0x73, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x73, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x44, 0x0a, 0x12, 0x43, 0x6f, 0x70, 0x79, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2e, 0x0a, 0x08, 0x73, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x08,
	0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x22, 0x62, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x49, 0x44,
	0x12, 0x2a, 0x0a, 0x10, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x16, 0x0a, 0x14,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x68, 0x0a, 0x1a, 0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x61, 0x64, 0x79, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x1c,
	0x0a, 0x1a, 0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x52, 0x65, 0x61, 0x64, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x98, 0x01, 0x0a,
	0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x46, 0x72, 0x6f,
	0x6d, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x49, 0x44, 0x12,
	0x2a, 0x0a, 0x10, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x61,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5a, 0x6f, 0x6e, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x5a, 0x6f, 0x6e, 0x65, 0x22, 0x4a, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x28, 0x0a, 0x06, 0x76, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x06, 0x76, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x22, 0x5e, 0x0a, 0x18, 0x54, 0x61, 0x6b, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x4a, 0x0a, 0x18, 0x54, 0x61, 0x6b, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x2e, 0x0a, 0x08, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x08, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x22,
	0x5e, 0x0a, 0x18, 0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x52, 0x65, 0x61, 0x64, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x76, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x1a, 0x0a, 0x18, 0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x52, 0x65, 0x61, 0x64, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x61, 0x0a, 0x1b, 0x57,
	0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x65, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x1d,
	0x0a, 0x1b, 0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x41,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x58, 0x0a,
	0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x49, 0x44, 0x12,
	0x26, 0x0a, 0x0e, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x14, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xc4, 0x02,
	0x0a, 0x11, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x4a, 0x6f, 0x62, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x63, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x63, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x43, 0x4c, 0x49, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x43, 0x4c, 0x49, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x2a, 0x0a, 0x10, 0x76, 0x6d, 0x43, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x76,
	0x6d, 0x43, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x22, 0x0a, 0x0c, 0x73, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x49, 0x44, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x6b, 0x65, 0x79, 0x50, 0x61, 0x69, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6b, 0x65, 0x79, 0x50, 0x61, 0x69,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x6d, 0x0a, 0x1d, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x1d, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x22, 0x93, 0x01, 0x0a, 0x1d, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x61, 0x78, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x61, 0x78, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x52, 0x65, 0x74, 0x72, 0x79, 0x4d, 0x61, 0x78, 0x41, 0x74,
	0x74, 0x65, 0x6d, 0x70, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x52, 0x65,
	0x74, 0x72, 0x79, 0x4d, 0x61, 0x78, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x73, 0x12, 0x2a,
	0x0a, 0x10, 0x55, 0x73, 0x65, 0x53, 0x70, 0x6f, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x55, 0x73, 0x65, 0x53, 0x70, 0x6f,
	0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x22, 0xeb, 0x01, 0x0a, 0x08, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x21, 0x0a, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x3a, 0x0a, 0x0a,
	0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x6c, 0x61,
	0x75, 0x6e, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x24, 0x0a, 0x0c, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x22, 0x21,
	0x0a, 0x09, 0x53, 0x63, 0x61, 0x6e, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x63, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x22, 0x34, 0x0a, 0x06, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x36, 0x0a, 0x08, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x29, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x32, 0x8f, 0x0b, 0x0a, 0x08, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x52, 0x0a, 0x0e, 0x52, 0x75, 0x6e, 0x53, 0x63,
	0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x4a, 0x6f, 0x62, 0x12, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x2e, 0x52, 0x75, 0x6e, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67,
	0x4a, 0x6f, 0x62, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x2e, 0x52, 0x75, 0x6e, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67,
	0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0e, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x12, 0x1e, 0x2e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x1e, 0x2e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12,
	0x5b, 0x0a, 0x11, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x12, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x56,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x6f, 0x6f, 0x74,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x25, 0x2e, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x14, 0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x61, 0x64, 0x79, 0x12, 0x24, 0x2e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x61, 0x64, 0x79, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x1a, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x57,
	0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x61, 0x64, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1e, 0x2e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x1e, 0x2e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12,
	0x6a, 0x0a, 0x16, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x54,
	0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x56, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x54, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x1a, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x54, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0c, 0x43,
	0x6f, 0x70, 0x79, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x1c, 0x2e, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x70, 0x79, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x70, 0x79, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x1e, 0x2e, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x1e, 0x2e, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x64, 0x0a,
	0x14, 0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x52, 0x65, 0x61, 0x64, 0x79, 0x12, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x2e, 0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x52, 0x65, 0x61, 0x64, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x24, 0x2e, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x61, 0x64, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12,
	0x28, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x12, 0x54, 0x61, 0x6b, 0x65, 0x56, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x22, 0x2e, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x54, 0x61, 0x6b, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a,
	0x22, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x54, 0x61, 0x6b, 0x65, 0x56,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x12, 0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x61, 0x64, 0x79, 0x12, 0x22, 0x2e, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x56, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x61, 0x64, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a,
	0x22, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x57, 0x61, 0x69, 0x74, 0x46,
	0x6f, 0x72, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x61, 0x64, 0x79, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x15, 0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x12, 0x25,
	0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x57, 0x61, 0x69, 0x74, 0x46, 0x6f,
	0x72, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x2e, 0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x4c,
	0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x1c,
	0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x1c, 0x2e, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x42, 0x18, 0x5a, 0x16,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_provider_service_proto_rawDescOnce sync.Once
	file_proto_provider_service_proto_rawDescData = file_proto_provider_service_proto_rawDesc
)

func file_proto_provider_service_proto_rawDescGZIP() []byte {
	file_proto_provider_service_proto_rawDescOnce.Do(func() {
		file_proto_provider_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_provider_service_proto_rawDescData)
	})
	return file_proto_provider_service_proto_rawDescData
}

var file_proto_provider_service_proto_msgTypes = make([]protoimpl.MessageInfo, 38)
var file_proto_provider_service_proto_goTypes = []interface{}{
	(*RunScanningJobParams)(nil),           // 0: provider.RunScanningJobParams
	(*RunScanningJobResult)(nil),           // 1: provider.RunScanningJobResult
	(*DiscoverScopesParams)(nil),           // 2: provider.DiscoverScopesParams
	(*DiscoverScopesResult)(nil),           // 3: provider.DiscoverScopesResult
	(*DiscoverInstancesParams)(nil),        // 4: provider.DiscoverInstancesParams
	(*DiscoverInstancesResult)(nil),        // 5: provider.DiscoverInstancesResult
	(*GetInstanceRootVolumeParams)(nil),    // 6: provider.GetInstanceRootVolumeParams
	(*GetInstanceRootVolumeResult)(nil),    // 7: provider.GetInstanceRootVolumeResult
	(*WaitForInstanceReadyParams)(nil),     // 8: provider.WaitForInstanceReadyParams
	(*WaitForInstanceReadyResult)(nil),     // 9: provider.WaitForInstanceReadyResult
	(*DeleteInstanceParams)(nil),           // 10: provider.DeleteInstanceParams
	(*DeleteInstanceResult)(nil),           // 11: provider.DeleteInstanceResult
	(*AttachVolumeToInstanceParams)(nil),   // 12: provider.AttachVolumeToInstanceParams
	(*AttachVolumeToInstanceResult)(nil),   // 13: provider.AttachVolumeToInstanceResult
	(*CopySnapshotParams)(nil),             // 14: provider.CopySnapshotParams
	(*CopySnapshotResult)(nil),             // 15: provider.CopySnapshotResult
	(*DeleteSnapshotParams)(nil),           // 16: provider.DeleteSnapshotParams
	(*DeleteSnapshotResult)(nil),           // 17: provider.DeleteSnapshotResult
	(*WaitForSnapshotReadyParams)(nil),     // 18: provider.WaitForSnapshotReadyParams
	(*WaitForSnapshotReadyResult)(nil),     // 19: provider.WaitForSnapshotReadyResult
	(*CreateVolumeFromSnapshotParams)(nil), // 20: provider.CreateVolumeFromSnapshotParams
	(*CreateVolumeFromSnapshotResult)(nil), // 21: provider.CreateVolumeFromSnapshotResult
	(*TakeVolumeSnapshotParams)(nil),       // 22: provider.TakeVolumeSnapshotParams
	(*TakeVolumeSnapshotResult)(nil),       // 23: provider.TakeVolumeSnapshotResult
	(*WaitForVolumeReadyParams)(nil),       // 24: provider.WaitForVolumeReadyParams
	(*WaitForVolumeReadyResult)(nil),       // 25: provider.WaitForVolumeReadyResult
	(*WaitForVolumeAttachedParams)(nil),    // 26: provider.WaitForVolumeAttachedParams
	(*WaitForVolumeAttachedResult)(nil),    // 27: provider.WaitForVolumeAttachedResult
	(*DeleteVolumeParams)(nil),             // 28: provider.DeleteVolumeParams
	(*DeleteVolumeResult)(nil),             // 29: provider.DeleteVolumeResult
	(*ScanningJobConfig)(nil),              // 30: provider.ScanningJobConfig
	(*ScannerInstanceCreationConfig)(nil),  // 31: provider.ScannerInstanceCreationConfig
	(*Instance)(nil),                       // 32: provider.Instance
	(*AccountScope)(nil),                   // 33: provider.AccountScope
	(*ScanScope)(nil),                      // 34: provider.ScanScope
	(*Volume)(nil),                         // 35: provider.Volume
	(*Snapshot)(nil),                       // 36: provider.Snapshot
	(*Tag)(nil),                            // 37: provider.Tag
	(*timestamppb.Timestamp)(nil),          // 38: google.protobuf.Timestamp
}
var file_proto_provider_service_proto_depIdxs = []int32{
	30, // 0: provider.RunScanningJobParams.config:type_name -> provider.ScanningJobConfig
	32, // 1: provider.RunScanningJobResult.instance:type_name -> provider.Instance
	32, // 2: provider.DiscoverInstancesResult.instances:type_name -> provider.Instance
	35, // 3: provider.GetInstanceRootVolumeResult.volume:type_name -> provider.Volume
	36, // 4: provider.CopySnapshotResult.snapshot:type_name -> provider.Snapshot
	35, // 5: provider.CreateVolumeFromSnapshotResult.volume:type_name -> provider.Volume
	36, // 6: provider.TakeVolumeSnapshotResult.snapshot:type_name -> provider.Snapshot
	31, // 7: provider.ScanningJobConfig.scannerInstanceCreationConfig:type_name -> provider.ScannerInstanceCreationConfig
	37, // 8: provider.Instance.tags:type_name -> provider.Tag
	38, // 9: provider.Instance.launchTime:type_name -> google.protobuf.Timestamp
	0,  // 10: provider.Provider.RunScanningJob:input_type -> provider.RunScanningJobParams
	2,  // 11: provider.Provider.DiscoverScopes:input_type -> provider.DiscoverScopesParams
	4,  // 12: provider.Provider.DiscoverInstances:input_type -> provider.DiscoverInstancesParams
	6,  // 13: provider.Provider.GetInstanceRootVolume:input_type -> provider.GetInstanceRootVolumeParams
	8,  // 14: provider.Provider.WaitForInstanceReady:input_type -> provider.WaitForInstanceReadyParams
	10, // 15: provider.Provider.DeleteInstance:input_type -> provider.DeleteInstanceParams
	12, // 16: provider.Provider.AttachVolumeToInstance:input_type -> provider.AttachVolumeToInstanceParams
	14, // 17: provider.Provider.CopySnapshot:input_type -> provider.CopySnapshotParams
	16, // 18: provider.Provider.DeleteSnapshot:input_type -> provider.DeleteSnapshotParams
	18, // 19: provider.Provider.WaitForSnapshotReady:input_type -> provider.WaitForSnapshotReadyParams
	20, // 20: provider.Provider.CreateVolumeFromSnapshot:input_type -> provider.CreateVolumeFromSnapshotParams
	22, // 21: provider.Provider.TakeVolumeSnapshot:input_type -> provider.TakeVolumeSnapshotParams
	24, // 22: provider.Provider.WaitForVolumeReady:input_type -> provider.WaitForVolumeReadyParams
	26, // 23: provider.Provider.WaitForVolumeAttached:input_type -> provider.WaitForVolumeAttachedParams
	28, // 24: provider.Provider.DeleteVolume:input_type -> provider.DeleteVolumeParams
	1,  // 25: provider.Provider.RunScanningJob:output_type -> provider.RunScanningJobResult
	3,  // 26: provider.Provider.DiscoverScopes:output_type -> provider.DiscoverScopesResult
	5,  // 27: provider.Provider.DiscoverInstances:output_type -> provider.DiscoverInstancesResult
	7,  // 28: provider.Provider.GetInstanceRootVolume:output_type -> provider.GetInstanceRootVolumeResult
	9,  // 29: provider.Provider.WaitForInstanceReady:output_type -> provider.WaitForInstanceReadyResult
	11, // 30: provider.Provider.DeleteInstance:output_type -> provider.DeleteInstanceResult
	13, // 31: provider.Provider.AttachVolumeToInstance:output_type -> provider.AttachVolumeToInstanceResult
	15, // 32: provider.Provider.CopySnapshot:output_type -> provider.CopySnapshotResult
	17, // 33: provider.Provider.DeleteSnapshot:output_type -> provider.DeleteSnapshotResult
	19, // 34: provider.Provider.WaitForSnapshotReady:output_type -> provider.WaitForSnapshotReadyResult
	21, // 35: provider.Provider.CreateVolumeFromSnapshot:output_type -> provider.CreateVolumeFromSnapshotResult
	23, // 36: provider.Provider.TakeVolumeSnapshot:output_type -> provider.TakeVolumeSnapshotResult
	25, // 37: provider.Provider.WaitForVolumeReady:output_type -> provider.WaitForVolumeReadyResult
	27, // 38: provider.Provider.WaitForVolumeAttached:output_type -> provider.WaitForVolumeAttachedResult
	29, // 39: provider.Provider.DeleteVolume:output_type -> provider.DeleteVolumeResult
	25, // [25:40] is the sub-list for method output_type
	10, // [10:25] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_proto_provider_service_proto_init() }
func file_proto_provider_service_proto_init() {
	if File_proto_provider_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_provider_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunScanningJobParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_provider_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunScanningJobResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_provider_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscoverScopesParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_provider_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscoverScopesResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_provider_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscoverInstancesParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_provider_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscoverInstancesResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_provider_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInstanceRootVolumeParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_provider_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInstanceRootVolumeResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_provider_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WaitForInstanceReadyParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_provider_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WaitForInstanceReadyResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_provider_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInstanceParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_provider_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInstanceResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_provider_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttachVolumeToInstanceParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_provider_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttachVolumeToInstanceResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_provider_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CopySnapshotParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_provider_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CopySnapshotResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_provider_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSnapshotParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_provider_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSnapshotResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_provider_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WaitForSnapshotReadyParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_provider_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WaitForSnapshotReadyResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_provider_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVolumeFromSnapshotParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_provider_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVolumeFromSnapshotResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_provider_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TakeVolumeSnapshotParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_provider_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TakeVolumeSnapshotResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_provider_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WaitForVolumeReadyParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_provider_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WaitForVolumeReadyResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_provider_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WaitForVolumeAttachedParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_provider_service_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WaitForVolumeAttachedResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_provider_service_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteVolumeParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_provider_service_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteVolumeResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_provider_service_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScanningJobConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_provider_service_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScannerInstanceCreationConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_provider_service_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Instance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_provider_service_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountScope); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_provider_service_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScanScope); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_provider_service_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Volume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_provider_service_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Snapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_provider_service_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_provider_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   38,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_provider_service_proto_goTypes,
		DependencyIndexes: file_proto_provider_service_proto_depIdxs,
		MessageInfos:      file_proto_provider_service_proto_msgTypes,
	}.Build()
	File_proto_provider_service_proto = out.File
	file_proto_provider_service_proto_rawDesc = nil
	file_proto_provider_service_proto_goTypes = nil
	file_proto_provider_service_proto_depIdxs = nil
}
