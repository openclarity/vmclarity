# syntax=docker/dockerfile:1.2
FROM --platform=$BUILDPLATFORM node:20-slim AS site-build

WORKDIR /app/ui-build

COPY ui .
RUN npm i
RUN npm run build

FROM --platform=$BUILDPLATFORM tonistiigi/xx:1.2.1@sha256:8879a398dedf0aadaacfbd332b29ff2f84bc39ae6d4e9c0a1109db27ac5ba012 AS xx

FROM --platform=$BUILDPLATFORM golang:1.20.4-alpine3.16 AS builder

COPY --from=xx / /

RUN apk add --update alpine-sdk ca-certificates openssl clang lld

ARG TARGETPLATFORM

RUN xx-apk --update add musl-dev gcc binutils-gold=2.38-r3

# lld has issues building static binaries for ppc so prefer ld for it
RUN [ "$(xx-info arch)" != "ppc64le" ] || XX_CC_PREFER_LINKER=ld xx-clang --setup-target-triple

RUN xx-go --wrap

WORKDIR /usr/local/src/vmclarity

ARG GOPROXY

ENV CGO_ENABLED=1

COPY go.mod go.sum ./
COPY api/go.mod api/go.sum ./api/
RUN go mod download

COPY . .

RUN go build -o /go/bin/vmclarity -v -ldflags="-w -extldflags -static" ./backend/cmd/backend/main.go
RUN xx-verify /go/bin/vmclarity

FROM alpine:3.18

WORKDIR /app

COPY --from=builder /go/bin/vmclarity ./backend
COPY --from=site-build /app/ui-build/build site

ENTRYPOINT ["/app/backend"]
