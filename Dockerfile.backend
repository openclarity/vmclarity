# syntax=docker/dockerfile:1.2
FROM --platform=$BUILDPLATFORM node:20-slim AS site-build

WORKDIR /app/ui-build

COPY ui .
RUN npm i
RUN npm run build

FROM --platform=$BUILDPLATFORM golang:1.20.5-alpine AS builder

RUN apk add --update --no-cache gcc g++ git binutils-gold

# Copy vmclarity code to /build
COPY . /build

# Build backend code
WORKDIR /build/backend

ARG VERSION
ARG BUILD_TIMESTAMP
ARG COMMIT_HASH
ARG TARGETOS
ARG TARGETARCH

RUN --mount=type=cache,target=/go/pkg/mod \
    --mount=type=cache,target=/root/.cache/go-build \
    GOOS=${TARGETOS} GOARCH=${TARGETARCH} \
    go build -ldflags="-s -w \
     -X 'github.com/openclarity/vmclarity/backend/pkg/version.Version=${VERSION}' \
     -X 'github.com/openclarity/vmclarity/backend/pkg/version.CommitHash=${COMMIT_HASH}' \
     -X 'github.com/openclarity/vmclarity/backend/pkg/version.BuildTimestamp=${BUILD_TIMESTAMP}'" -o backend ./cmd/backend/main.go

FROM alpine:3.18

WORKDIR /app

COPY --from=builder ["/build/backend/backend", "./backend"]
COPY --from=site-build ["/app/ui-build/build", "site"]

ENTRYPOINT ["/app/backend"]
